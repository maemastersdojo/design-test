/**
* @typedef {typeof colorPaths} ColorPaths - All the valid paths for the tokens of type color.
* To use this type you can do: `@type {import('path/to/myTokensFile').ColorPaths}`
*/
export const colorPaths = /** @type {const} */ ([
  'sys-ramps.secondary-color.ramp-teal.09',
  'sys-brand alias.day.secondary-color.teal.Teal09',
  'sys-ramps.primary-color.ramp-core-brand.02',
  'sys-brand alias.night.primary-color.core-brand.ActiveTeal',
  'aMode.bg.action.primary.default',
  'sys-ramps.secondary-color.ramp-grey.03',
  'sys-brand alias.day.secondary-color.grey.Grey03',
  'sys-ramps.secondary-color.ramp-teal.10',
  'sys-brand alias.night.secondary-color.teal.Teal10',
  'aMode.bg.action.primary.disabled',
  'sys-brand alias.day.secondary-color.teal.Teal10',
  'sys-ramps.secondary-color.ramp-teal.03',
  'sys-brand alias.night.secondary-color.teal.Teal03',
  'aMode.bg.action.primary.focus',
  'aMode.bg.action.primary.hover',
  'sys-ramps.secondary-color.ramp-teal.11',
  'sys-brand alias.day.secondary-color.teal.Teal11',
  'sys-ramps.secondary-color.ramp-teal.01',
  'sys-brand alias.night.secondary-color.teal.Teal01',
  'aMode.bg.action.primary.pressed',
  'sys-brand alias.Transparent',
  'aMode.bg.action.secondary.default',
  'sys-brand alias.toDelete',
  'aMode.bg.action.secondary.disabled',
  'aMode.bg.action.secondary.focus',
  'aMode.bg.action.secondary.hover',
  'aMode.bg.action.secondary.pressed',
  'sys-ramps.primary-color.ramp-core-brand.01',
  'sys-brand alias.day.primary-color.core-brand.CalmWhite',
  'aMode.bg.action.tertiary.default',
  'aMode.bg.action.tertiary.disabled',
  'aMode.bg.action.tertiary.focus',
  'aMode.bg.action.tertiary.hover',
  'aMode.bg.action.tertiary.pressed',
  'aMode.bg.action.x ghost.default',
  'aMode.bg.action.x muted.default',
  'aMode.bg.action.x muted.disabled',
  'aMode.bg.action.x muted.focus',
  'aMode.bg.action.x muted.hover',
  'aMode.bg.action.x muted.pressed',
  'sys-ramps.tertiary-color.ramp-orange.02',
  'sys-brand alias.day.system.bad',
  'sys-ramps.tertiary-color.ramp-orange.01',
  'sys-brand alias.night.system.bad',
  'aMode.bg.base.bad',
  'sys-brand alias.day.secondary-color.teal.Teal03',
  'sys-ramps.secondary-color.ramp-teal.08',
  'sys-brand alias.night.secondary-color.teal.Teal08',
  'aMode.bg.base.decorative',
  'sys-ramps.secondary-color.ramp-grey.02',
  'sys-brand alias.day.secondary-color.grey.Grey02',
  'sys-brand alias.night.secondary-color.teal.Teal11',
  'aMode.bg.base.default',
  'aMode.bg.base.eclipse.default-eclipse',
  'aMode.bg.base.eclipse.good-eclipse',
  'aMode.bg.base.eclipse.header-eclipse',
  'aMode.bg.base.emphasis',
  'sys-ramps.secondary-color.ramp-teal.07',
  'sys-brand alias.day.system.good',
  'aMode.bg.base.good',
  'sys-brand alias.night.secondary-color.teal.Teal09',
  'aMode.bg.base.header',
  'sys-ramps.secondary-color.ramp-grey.01',
  'sys-brand alias.night.secondary-color.grey.Grey01',
  'aMode.bg.base.inverse.secondary',
  'sys-ramps.ramp-system.overlay-90%',
  'sys-brand alias.Overlay',
  'aMode.bg.base.overlay',
  'sys-ramps.ramp-system.overlay-30%',
  'sys-brand alias.Overla-muted',
  'aMode.bg.base.overlay-muted',
  'sys-brand alias.day.secondary-color.grey.Grey01',
  'aMode.bg.base.secondary',
  'sys-ramps.tertiary-color.ramp-yellow.02',
  'sys-brand alias.day.system.warn',
  'sys-ramps.tertiary-color.ramp-yellow.01',
  'sys-brand alias.night.system.warn',
  'aMode.bg.base.warn',
  'aMode.bg.control.bad.default',
  'aMode.bg.control.default',
  'aMode.bg.control.disabled',
  'aMode.bg.control.focus',
  'aMode.bg.control.hover',
  'aMode.bg.control.pressed',
  'aMode.bg.control.selected.inverse.selected-counter-inverse',
  'aMode.bg.control.selected.inverse.selected-disabled-onInvert',
  'sys-brand alias.whatShouldIBe',
  'aMode.bg.control.selected.inverse.selected-focus-inverse',
  'sys-ramps.secondary-color.ramp-grey.07',
  'sys-brand alias.day.secondary-color.grey.Grey07',
  'aMode.bg.control.selected.inverse.selected-hover-inverse',
  'sys-brand alias.day.secondary-color.teal.Teal07',
  'sys-brand alias.night.secondary-color.teal.Teal07',
  'aMode.bg.control.selected.inverse.selected-inverse',
  'aMode.bg.control.selected.inverse.selected-pressed-inverse',
  'aMode.bg.control.selected.selected',
  'aMode.bg.control.selected.selected-counter',
  'aMode.bg.control.selected.selected-disabled',
  'aMode.bg.control.selected.selected-focus',
  'aMode.bg.control.selected.selected-hover',
  'aMode.bg.control.selected.selected-pressed',
  'aMode.bg.control.unselected.unselected',
  'aMode.bg.control.unselected.unselected-counter',
  'aMode.bg.control.unselected.unselected-hover',
  'sys-ramps.secondary-color.ramp-grey.04',
  'sys-brand alias.day.secondary-color.grey.Grey04',
  'aMode.bg.control.unselected.unselected-pressed',
  'aMode.bg.nav.disabled',
  'aMode.bg.nav.focus',
  'aMode.bg.nav.hover',
  'aMode.bg.nav.pressed',
  'aMode.bg.nav.selected',
  'aMode.bg.nav.selected-counter',
  'aMode.bg.nav.selected-disabled',
  'aMode.bg.nav.selected-focus',
  'aMode.bg.nav.selected-hover',
  'aMode.bg.nav.selected-pressed',
  'aMode.bg.nav.unselected',
  'aMode.bg.nav.unselected-counter',
  'aMode.bg.nav.unselected-hover',
  'aMode.bg.nav.unselected-pressed',
  'aMode.border.action.muted.default',
  'aMode.border.action.muted.disabled',
  'aMode.border.action.muted.focus',
  'aMode.border.action.muted.hover',
  'aMode.border.action.muted.pressed',
  'aMode.border.action.primary.default',
  'aMode.border.action.primary.default-onInvert',
  'aMode.border.action.primary.disabled',
  'aMode.border.action.primary.focus',
  'aMode.border.action.primary.hover',
  'aMode.border.action.primary.pressed',
  'aMode.border.action.secondary.default',
  'aMode.border.action.secondary.default old',
  'aMode.border.action.secondary.disabled',
  'aMode.border.action.secondary.focus',
  'aMode.border.action.secondary.hover',
  'aMode.border.action.secondary.inverse.focus-onInvert',
  'aMode.border.action.secondary.inverse.hover-onInvert',
  'aMode.border.action.secondary.pressed',
  'aMode.border.action.tertiary.default-onInvert',
  'aMode.border.action.tertiary.disabled',
  'aMode.border.action.tertiary.focus',
  'aMode.border.action.tertiary.hover',
  'aMode.border.action.tertiary.pressed',
  'aMode.border.base.contrast',
  'sys-ramps.primary-color.ramp-core-brand.03',
  'sys-brand alias.night.primary-color.core-brand.ConfidentBlack',
  'aMode.border.base.default',
  'aMode.border.base.divider',
  'sys-brand alias.day.primary-color.core-brand.ActiveTeal',
  'aMode.border.base.emphasis',
  'aMode.border.base.secondary',
  'aMode.border.control.bad.default',
  'aMode.border.control.decorative.default',
  'sys-ramps.secondary-color.ramp-grey.05',
  'sys-brand alias.day.secondary-color.grey.Grey05',
  'aMode.border.control.default',
  'aMode.border.control.disabled',
  'sys-brand alias.day.primary-color.core-brand.ConfidentBlack',
  'aMode.border.control.focus',
  'aMode.border.control.hover',
  'aMode.border.control.pressed',
  'aMode.border.control.selected',
  'aMode.border.control.selected-disabled',
  'aMode.border.control.selected-focus',
  'aMode.border.control.selected-hover',
  'aMode.border.control.unselected',
  'aMode.border.focus-ring',
  'sys-brand alias.day.secondary-color.teal.Teal01',
  'aMode.border.focus-ring-onInvert',
  'aMode.border.nav.disabled',
  'aMode.border.nav.focus',
  'aMode.border.nav.hover',
  'aMode.border.nav.pressed',
  'aMode.border.nav.selected',
  'aMode.border.nav.selected-counter',
  'aMode.border.nav.selected-disabled',
  'aMode.border.nav.selected-focus',
  'aMode.border.nav.selected-hover',
  'aMode.border.nav.selected-pressed',
  'aMode.border.nav.unselected',
  'aMode.border.nav.unselected-counter',
  'aMode.border.nav.unselected-hover',
  'aMode.border.nav.unselected-pressed',
  'sys-ramps.tertiary-color.ramp-blue.01',
  'sys-brand alias.day.tertiary-color.blue.BuzzyBlue',
  'sys-brand alias.night.tertiary-color.blue.BuzzyBlue',
  'aMode.dojo-patterns.blue.buzzyBlue',
  'sys-ramps.tertiary-color.ramp-blue.03',
  'sys-brand alias.day.tertiary-color.blue.ElectricNavy',
  'sys-brand alias.night.tertiary-color.blue.ElectricNavy',
  'aMode.dojo-patterns.blue.electricNavy',
  'sys-ramps.tertiary-color.ramp-blue.02',
  'sys-brand alias.day.tertiary-color.blue.SteelBlue',
  'sys-brand alias.night.tertiary-color.blue.SteelBlue',
  'aMode.dojo-patterns.blue.steelBlue',
  'sys-brand alias.day.tertiary-color.orange.BouncyOrange',
  'sys-brand alias.night.tertiary-color.orange.BouncyOrange',
  'aMode.dojo-patterns.orange.bouncyOrange',
  'sys-brand alias.day.tertiary-color.orange.Pomegranate',
  'sys-brand alias.night.tertiary-color.orange.Pomegranate',
  'aMode.dojo-patterns.orange.pomegranate',
  'sys-ramps.tertiary-color.ramp-orange.03',
  'sys-brand alias.day.tertiary-color.orange.PunchyPlum',
  'sys-brand alias.night.tertiary-color.orange.Plum',
  'aMode.dojo-patterns.orange.punchyPlum',
  'sys-ramps.tertiary-color.ramp-purple.02',
  'sys-brand alias.day.tertiary-color.purple.Iris',
  'sys-brand alias.night.tertiary-color.purple.Iris',
  'aMode.dojo-patterns.purple.Iris',
  'sys-ramps.tertiary-color.ramp-purple.01',
  'sys-brand alias.day.tertiary-color.purple.Lilac',
  'sys-brand alias.night.tertiary-color.purple.LivelyLilac',
  'aMode.dojo-patterns.purple.livelyLilac',
  'sys-ramps.tertiary-color.ramp-purple.03',
  'sys-brand alias.day.tertiary-color.purple.VibrantViolet',
  'sys-brand alias.night.tertiary-color.purple.VibrantViolet',
  'aMode.dojo-patterns.purple.vibrantViolet',
  'aMode.dojo-patterns.teal.teal07',
  'sys-brand alias.day.secondary-color.teal.Teal08',
  'aMode.dojo-patterns.teal.teal08',
  'aMode.dojo-patterns.teal.teal09',
  'aMode.elevation.shadow.shadow-10%',
  'aMode.elevation.shadow.shadow-13%',
  'aMode.elevation.shadow.shadow-3%',
  'aMode.elevation.shadow.shadow-4%',
  'aMode.icon.action.ghost.default',
  'aMode.icon.action.ghost.disabled',
  'aMode.icon.action.ghost.focus',
  'aMode.icon.action.ghost.hover',
  'aMode.icon.action.ghost.pressed',
  'aMode.icon.action.ghost.visited',
  'aMode.icon.action.muted.default',
  'aMode.icon.action.muted.disabled',
  'aMode.icon.action.muted.focus',
  'aMode.icon.action.muted.hover',
  'aMode.icon.action.muted.pressed',
  'aMode.icon.action.muted.visited',
  'aMode.icon.action.primary.default',
  'sys-brand alias.night.primary-color.core-brand.CalmWhite',
  'aMode.icon.action.primary.default-onInvert',
  'aMode.icon.action.primary.disabled',
  'aMode.icon.action.primary.focus',
  'aMode.icon.action.primary.hover',
  'aMode.icon.action.primary.pressed',
  'aMode.icon.action.primary.visited',
  'aMode.icon.action.secondary.default',
  'aMode.icon.action.secondary.default-onInvert',
  'aMode.icon.action.secondary.disabled',
  'aMode.icon.action.secondary.focus',
  'aMode.icon.action.secondary.hover',
  'aMode.icon.action.secondary.pressed',
  'aMode.icon.action.secondary.visited',
  'aMode.icon.base.bad',
  'aMode.icon.base.brand',
  'sys-ramps.secondary-color.ramp-teal.06',
  'sys-brand alias.day.secondary-color.teal.Teal06',
  'aMode.icon.base.decorative',
  'sys-ramps.secondary-color.ramp-teal.05',
  'sys-brand alias.night.system.good',
  'aMode.icon.base.good',
  'aMode.icon.base.good-OnInvert',
  'aMode.icon.base.primary',
  'aMode.icon.base.primary-onInvert',
  'sys-ramps.secondary-color.ramp-teal.04',
  'sys-brand alias.night.secondary-color.teal.Teal04',
  'aMode.icon.base.secondary',
  'aMode.icon.base.warn',
  'aMode.icon.control.bad.default',
  'aMode.icon.control.decorative.default',
  'aMode.icon.control.default',
  'aMode.icon.control.disabled',
  'aMode.icon.control.focus',
  'aMode.icon.control.hover',
  'aMode.icon.control.label.default',
  'aMode.icon.control.label.disabled',
  'sys-ramps.secondary-color.ramp-grey.06',
  'sys-brand alias.day.secondary-color.grey.Grey06',
  'sys-brand alias.night.secondary-color.teal.Teal06',
  'aMode.icon.control.placeholder.default',
  'aMode.icon.control.placeholder.disabled',
  'aMode.icon.control.pressed',
  'aMode.icon.control.secondary.default',
  'aMode.icon.control.selected',
  'aMode.icon.control.selected-disabled',
  'aMode.icon.control.selected-focus',
  'aMode.icon.control.selected-hover',
  'aMode.icon.control.unselected',
  'aMode.icon.mealVoucher.--sodexo bottom',
  'aMode.icon.mealVoucher.--sodexo top',
  'aMode.icon.mealVoucher.--swile',
  'aMode.icon.mealVoucher.--upday-background',
  'aMode.icon.mealVoucher.--upday-foreground',
  'aMode.icon.mealVoucher.bg.--edenred',
  'aMode.icon.mealVoucher.bg.--sodexo',
  'aMode.icon.mealVoucher.bg.--swile',
  'aMode.icon.mealVoucher.bg.--upday',
  'aMode.icon.nav.disabled',
  'aMode.icon.nav.focus',
  'aMode.icon.nav.hover',
  'aMode.icon.nav.inverse.disabled',
  'aMode.icon.nav.inverse.focus',
  'aMode.icon.nav.inverse.hover',
  'aMode.icon.nav.inverse.pressed',
  'aMode.icon.nav.inverse.selected',
  'aMode.icon.nav.inverse.selected-disabled',
  'aMode.icon.nav.inverse.selected-focus',
  'aMode.icon.nav.inverse.selected-hover',
  'aMode.icon.nav.inverse.unselected',
  'aMode.icon.nav.pressed',
  'aMode.icon.nav.selected',
  'aMode.icon.nav.selected-disabled',
  'aMode.icon.nav.selected-focus',
  'aMode.icon.nav.selected-hover',
  'aMode.icon.nav.unselected',
  'aMode.icon.paymentLogos.--amex-background',
  'aMode.icon.paymentLogos.--amex-foreground',
  'aMode.icon.paymentLogos.--dinersInt-background',
  'aMode.icon.paymentLogos.--dinersInt-foreground',
  'aMode.icon.paymentLogos.--discover',
  'aMode.icon.paymentLogos.--mastercard end',
  'aMode.icon.paymentLogos.--mastercard middle',
  'aMode.icon.paymentLogos.--mastercard start',
  'aMode.icon.paymentLogos.--visa',
  'aMode.icon.paymentLogos.bg.--amex',
  'aMode.icon.paymentLogos.bg.--dinersInt',
  'aMode.icon.paymentLogos.bg.--discover',
  'aMode.icon.paymentLogos.bg.--mastercard',
  'aMode.icon.paymentLogos.bg.--visa',
  'aMode.text.action.ghost.default',
  'aMode.text.action.ghost.disabled',
  'aMode.text.action.ghost.focus',
  'aMode.text.action.ghost.hover',
  'aMode.text.action.ghost.pressed',
  'aMode.text.action.ghost.visited',
  'aMode.text.action.muted.default',
  'aMode.text.action.muted.disabled',
  'aMode.text.action.muted.focus',
  'aMode.text.action.muted.hover',
  'aMode.text.action.muted.pressed',
  'aMode.text.action.muted.visited',
  'aMode.text.action.primary.default',
  'aMode.text.action.primary.disabled',
  'aMode.text.action.primary.focus',
  'aMode.text.action.primary.hover',
  'aMode.text.action.primary.pressed',
  'aMode.text.action.primary.visited',
  'aMode.text.action.secondary.default',
  'aMode.text.action.secondary.disabled',
  'aMode.text.action.secondary.focus',
  'aMode.text.action.secondary.hover',
  'aMode.text.action.secondary.inverse.default-onInvert',
  'aMode.text.action.secondary.inverse.foucs-onInvert',
  'aMode.text.action.secondary.inverse.hover-onInvert',
  'aMode.text.action.secondary.pressed',
  'aMode.text.action.secondary.visited',
  'aMode.text.action.tertiary.default-onInvert',
  'aMode.text.action.tertiary.focus-onInvert',
  'aMode.text.action.tertiary.hover-onInvert',
  'aMode.text.action.tertiary.pressed-onInvert',
  'aMode.text.base.bad',
  'aMode.text.base.brand',
  'aMode.text.base.decorative',
  'aMode.text.base.good',
  'aMode.text.base.header-emphasis',
  'aMode.text.base.inverse.good-inverse',
  'aMode.text.base.inverse.primary-inverse',
  'aMode.text.base.inverse.secondary',
  'aMode.text.base.primary',
  'aMode.text.base.secondary',
  'aMode.text.base.warn',
  'aMode.text.control.bad.default',
  'aMode.text.control.default',
  'aMode.text.control.disabled',
  'aMode.text.control.focus',
  'aMode.text.control.hover',
  'aMode.text.control.label.bad',
  'aMode.text.control.label.default',
  'aMode.text.control.label.disabled',
  'aMode.text.control.placeholder.default',
  'aMode.text.control.placeholder.disabled',
  'aMode.text.control.pressed',
  'aMode.text.control.selected',
  'aMode.text.control.selected-disabled',
  'aMode.text.control.selected-focus',
  'aMode.text.control.selected-hover',
  'aMode.text.control.unselected',
  'aMode.text.nav.default',
  'aMode.text.nav.disabled',
  'aMode.text.nav.focus',
  'aMode.text.nav.hover',
  'aMode.text.nav.inverse.default-inverse',
  'aMode.text.nav.pressed',
  'aMode.text.nav.selected',
  'aMode.text.nav.selected-disabled',
  'aMode.text.nav.selected-focus',
  'aMode.text.nav.selected-hover',
  'aMode.text.nav.unselected',
  'Color styles._figma/bg-children',
  'EightShapes Specs.Annotation.Alignment grid',
  'EightShapes Specs.Annotation.Direction arrow',
  'EightShapes Specs.Annotation.Element outline',
  'EightShapes Specs.Annotation.Element overlay',
  'EightShapes Specs.Annotation.Item size',
  'EightShapes Specs.Annotation.Item spacing line',
  'EightShapes Specs.Annotation.Item spacing overlay',
  'EightShapes Specs.Annotation.Marker fill',
  'EightShapes Specs.Annotation.Marker text',
  'EightShapes Specs.Annotation.Padding line',
  'EightShapes Specs.Annotation.Padding overlay',
  'EightShapes Specs.Annotation.Padding size',
  'EightShapes Specs.Artwork background',
  'EightShapes Specs.Artwork stroke',
  'EightShapes Specs.Attributes.Dependency fill',
  'EightShapes Specs.Attributes.Dependency stroke',
  'EightShapes Specs.Attributes.Dependency text',
  'EightShapes Specs.Attributes.Icon stroke',
  'EightShapes Specs.Attributes.Raw value text',
  'EightShapes Specs.Attributes.Style fill',
  'EightShapes Specs.Attributes.Style stroke',
  'EightShapes Specs.Attributes.Style text',
  'EightShapes Specs.Attributes.Token fill',
  'EightShapes Specs.Attributes.Token text',
  'EightShapes Specs.Attributes.Variable fill',
  'EightShapes Specs.Attributes.Variable stroke',
  'EightShapes Specs.Attributes.Variable text',
  'EightShapes Specs.Background',
  'EightShapes Specs.Text.Primary',
  'EightShapes Specs.Text.Secondary',
  'sys-ramps.secondary-color.ramp-teal.02',
  'sys-brand alias.day.secondary-color.teal.Teal02',
  'sys-brand alias.day.secondary-color.teal.Teal04',
  'sys-brand alias.day.secondary-color.teal.Teal05',
  'sys-brand alias.day.system.black',
  'sys-brand alias.day.system.white',
  'sys-brand alias.day.tertiary-color.yellow.Lemon',
  'sys-brand alias.day.tertiary-color.yellow.Mango',
  'sys-brand alias.night.secondary-color.grey.Grey02',
  'sys-brand alias.night.secondary-color.grey.Grey03',
  'sys-brand alias.night.secondary-color.grey.Grey04',
  'sys-brand alias.night.secondary-color.grey.Grey05',
  'sys-brand alias.night.secondary-color.grey.Grey06',
  'sys-brand alias.night.secondary-color.grey.Grey07',
  'sys-brand alias.night.secondary-color.teal.Teal02',
  'sys-brand alias.night.secondary-color.teal.Teal05',
  'sys-brand alias.night.system.black',
  'sys-brand alias.night.system.white',
  'sys-brand alias.night.tertiary-color.yellow.Lemon',
  'sys-brand alias.night.tertiary-color.yellow.Mango',
  'sys-brand alias.unsure??',
  'sys-ramps.ramp-system.black',
  'sys-ramps.ramp-system.Green',
  'sys-ramps.ramp-system.Lemon',
  'sys-ramps.ramp-system.Mango',
  'sys-ramps.ramp-system.Pomegranate',
  'sys-ramps.ramp-system.white'
] as const);
export type ColorPaths = typeof colorPaths;

/**
* @typedef {typeof dimensionPaths} DimensionPaths - All the valid paths for the tokens of type dimension.
* To use this type you can do: `@type {import('path/to/myTokensFile').DimensionPaths}`
*/
export const dimensionPaths = /** @type {const} */ ([
  'aMode.elevation.blur.blur-10',
  'aMode.elevation.blur.blur-14',
  'aMode.elevation.blur.blur-2',
  'aMode.elevation.blur.blur-25',
  'aMode.elevation.blur.blur-44',
  'aMode.elevation.blur.blur-76',
  'aMode.elevation.spread.s-0',
  'aMode.elevation.spread.s-minus-18',
  'aMode.elevation.spread.s-minus-2',
  'aMode.elevation.spread.s-minus-32',
  'aMode.elevation.spread.s-minus-5',
  'aMode.elevation.x.x',
  'aMode.elevation.y.y-0',
  'aMode.elevation.y.y-10',
  'aMode.elevation.y.y-18',
  'aMode.elevation.y.y-2',
  'aMode.elevation.y.y-5',
  'aMode.elevation.y.y-65',
  'com-font-size.3',
  'com-font-size.4',
  'com-font-size.5',
  'com-font-size.6',
  'com-font-size.8',
  'com-font-size.10',
  'com-font-size.12',
  'com-font-size.14',
  'com-font-size.18',
  'com-font-size.24',
  'com-font-size.16_5',
  'com-font-size.3_5',
  'com-font-weight.bold',
  'com-font-weight.display',
  'com-font-weight.medium',
  'com-font-weight.regular',
  'density.sys.sys-8px',
  'density.border (b-).b-l',
  'density.sys.sys-4px',
  'density.border (b-).b-m',
  'density.sys.sys-0px',
  'density.border (b-).b-none',
  'density.sys.sys-2•5px',
  'density.border (b-).b-s',
  'density.sys.sys-12px',
  'density.border (b-).b-xl',
  'density.sys.sys-1•5px',
  'density.border (b-).b-xs',
  'density.sys.sys-0',
  'density.gap (g-).g-0',
  'density.gap (g-).g-0px',
  'density.gap (g-).g-12px',
  'density.sys.sys-2px',
  'density.gap (g-).g-2px',
  'density.sys.sys-8',
  'density.gap (g-).g-2xl',
  'density.sys.sys-1',
  'density.gap (g-).g-2xs',
  'density.sys.sys-10',
  'density.gap (g-).g-3xl',
  'density.sys.sys-0•5',
  'density.gap (g-).g-3xs',
  'density.gap (g-).g-4px',
  'density.sys.sys-12',
  'density.gap (g-).g-4xl',
  'density.sys.sys-18',
  'density.gap (g-).g-5xl',
  'density.sys.sys-24',
  'density.gap (g-).g-6xl',
  'density.gap (g-).g-8px',
  'density.sys.sys-5px',
  'density.gap (g-).g-focus-ring',
  'density.sys.sys-5',
  'density.gap (g-).g-l',
  'density.sys.sys-4',
  'density.gap (g-).g-m',
  'density.sys.sys-3',
  'density.gap (g-).g-s',
  'density.sys.sys-6',
  'density.gap (g-).g-xl',
  'density.sys.sys-2',
  'density.gap (g-).g-xs',
  'density.padding (p-).p-0',
  'density.padding (p-).p-0px',
  'density.padding (p-).p-12px',
  'density.padding (p-).p-2px',
  'density.padding (p-).p-2xl',
  'density.padding (p-).p-2xs',
  'density.padding (p-).p-3xl',
  'density.padding (p-).p-3xs',
  'density.padding (p-).p-4px',
  'density.padding (p-).p-4xl',
  'density.padding (p-).p-5xl',
  'density.padding (p-).p-6xl',
  'density.padding (p-).p-8px',
  'density.padding (p-).p-l',
  'density.padding (p-).p-m',
  'density.padding (p-).p-s',
  'density.padding (p-).p-xl',
  'density.padding (p-).p-xs',
  'density.pane (v-).gutter (g-).v-g-2xl',
  'density.pane (v-).gutter (g-).v-g-compact',
  'density.pane (v-).gutter (g-).v-g-expanded',
  'density.pane (v-).gutter (g-).v-g-extra-large',
  'density.pane (v-).gutter (g-).v-g-large',
  'density.pane (v-).gutter (g-).v-g-medium',
  'density.pane (v-).gutter (g-).v-g-tiny',
  'density.pane (v-).height (h-).v-h-2xl',
  'density.pane (v-).height (h-).v-h-compact',
  'density.pane (v-).height (h-).v-h-expanded',
  'density.pane (v-).height (h-).v-h-extra-large',
  'density.pane (v-).height (h-).v-h-large',
  'density.pane (v-).height (h-).v-h-medium',
  'density.pane (v-).height (h-).v-h-tiny',
  'density.pane (v-).margin (m-).v-m-2xl',
  'density.pane (v-).margin (m-).v-m-compact',
  'density.pane (v-).margin (m-).v-m-expanded',
  'density.pane (v-).margin (m-).v-m-extra-large',
  'density.pane (v-).margin (m-).v-m-large',
  'density.pane (v-).margin (m-).v-m-medium',
  'density.pane (v-).margin (m-).v-m-tiny',
  'density.pane (v-).width (w-).v-w-2xl',
  'density.pane (v-).width (w-).v-w-compact',
  'density.pane (v-).width (w-).v-w-expanded',
  'density.pane (v-).width (w-).v-w-extra-large',
  'density.pane (v-).width (w-).v-w-large',
  'density.pane (v-).width (w-).v-w-medium',
  'density.pane (v-).width (w-).v-w-tiny',
  'density.sys.sys-999px',
  'density.radius (r-).r-circle',
  'density.sys.sys-32px',
  'density.radius (r-).r-l',
  'density.sys.sys-24px',
  'density.radius (r-).r-m',
  'density.radius (r-).r-none',
  'density.sys.sys-16px',
  'density.radius (r-).r-s',
  'density.sys.sys-48px',
  'density.radius (r-).r-xl',
  'density.radius (r-).r-xs',
  'density.sys.sys-1px'
] as const);
export type DimensionPaths = typeof dimensionPaths;

/**
* @typedef {typeof shadowPaths} ShadowPaths - All the valid paths for the tokens of type shadow.
* To use this type you can do: `@type {import('path/to/myTokensFile').ShadowPaths}`
*/
export const shadowPaths = /** @type {const} */ ([ 'Effect styles.elevation/elevation-01' ] as const);
export type ShadowPaths = typeof shadowPaths;

/**
* @typedef {typeof shadowsPaths} ShadowsPaths - All the valid paths for the tokens of type shadows.
* To use this type you can do: `@type {import('path/to/myTokensFile').ShadowsPaths}`
*/
export const shadowsPaths = /** @type {const} */ ([
  'Effect styles.elevation/elevation-02',
  'Effect styles.elevation/elevation-03',
  'Effect styles.Local/Design System ONLY'
] as const);
export type ShadowsPaths = typeof shadowsPaths;

/**
* @typedef {typeof textStylePaths} TextstylePaths - All the valid paths for the tokens of type textStyle.
* To use this type you can do: `@type {import('path/to/myTokensFile').TextstylePaths}`
*/
export const textStylePaths = /** @type {const} */ ([
  'Text styles._EightShapes Spec/Annotations/Marker',
  'Text styles._EightShapes Spec/Annotations/Marker small',
  'Text styles._EightShapes Spec/Annotations/Space size',
  'Text styles._EightShapes Spec/Heading/Section',
  'Text styles._EightShapes Spec/Heading/Subsection',
  'Text styles._EightShapes Spec/Heading/SubsectionMetadata',
  'Text styles._EightShapes Spec/Heading/Title',
  'Text styles._EightShapes Spec/Table/Column header',
  'Text styles._EightShapes Spec/Text/Attribute property',
  'Text styles._EightShapes Spec/Text/Attribute value',
  'Text styles._EightShapes Spec/Text/Dependency value',
  'Text styles._EightShapes Spec/Text/Element',
  'Text styles._EightShapes Spec/Text/Element type',
  'Text styles._EightShapes Spec/Text/Label',
  'Text styles._EightShapes Spec/Text/Label metadata',
  'Text styles._EightShapes Spec/Text/Style value',
  'Text styles._EightShapes Spec/Text/Token value',
  'Text styles._EightShapes Spec/Text/Variable collection value',
  'Text styles._EightShapes Spec/Text/Variable value',
  'Text styles.Actions/Button-l',
  'Text styles.Actions/Button-m',
  'Text styles.Actions/Button-s',
  'Text styles.Controls/Caption',
  'Text styles.Controls/Caption-strong',
  'Text styles.Controls/Global-menu',
  'Text styles.Headlines/Heading-l/compact',
  'Text styles.Headlines/Heading-l/large+',
  'Text styles.Headlines/Heading-l/medium & expanded',
  'Text styles.Headlines/Heading-m/compact',
  'Text styles.Headlines/Heading-m/large+',
  'Text styles.Headlines/Heading-m/medium & expanded',
  'Text styles.Headlines/Heading-s/compact',
  'Text styles.Headlines/Heading-s/large+',
  'Text styles.Headlines/Heading-s/medium & expanded',
  'Text styles.Headlines/Heading-xs/Heading-xs',
  'Text styles.Standard Text/Body-l',
  'Text styles.Standard Text/Body-l-lead',
  'Text styles.Standard Text/Body-l-underline',
  'Text styles.Standard Text/Body-m',
  'Text styles.Standard Text/Body-m-lead',
  'Text styles.Standard Text/Body-m-underline',
  'Text styles.Standard Text/Body-s',
  'Text styles.Standard Text/Body-s-lead',
  'Text styles.Standard Text/Body-s-underline'
] as const);
export type TextstylePaths = typeof textStylePaths;

/**
* @typedef {typeof sys_rampsPaths} Sys_rampsPaths - All the valid paths for the collection sys-ramps.
* To use this type you can do: `@type {import('path/to/myTokensFile').Sys_rampsPaths}`
*/
export const sys_rampsPaths = /** @type {const} */ ([
  'sys-ramps.secondary-color.ramp-teal.09',
  'sys-ramps.primary-color.ramp-core-brand.02',
  'sys-ramps.secondary-color.ramp-grey.03',
  'sys-ramps.secondary-color.ramp-teal.10',
  'sys-ramps.secondary-color.ramp-teal.03',
  'sys-ramps.secondary-color.ramp-teal.11',
  'sys-ramps.secondary-color.ramp-teal.01',
  'sys-ramps.primary-color.ramp-core-brand.01',
  'sys-ramps.tertiary-color.ramp-orange.02',
  'sys-ramps.tertiary-color.ramp-orange.01',
  'sys-ramps.secondary-color.ramp-teal.08',
  'sys-ramps.secondary-color.ramp-grey.02',
  'sys-ramps.secondary-color.ramp-teal.07',
  'sys-ramps.secondary-color.ramp-grey.01',
  'sys-ramps.ramp-system.overlay-90%',
  'sys-ramps.ramp-system.overlay-30%',
  'sys-ramps.tertiary-color.ramp-yellow.02',
  'sys-ramps.tertiary-color.ramp-yellow.01',
  'sys-ramps.secondary-color.ramp-grey.07',
  'sys-ramps.secondary-color.ramp-grey.04',
  'sys-ramps.primary-color.ramp-core-brand.03',
  'sys-ramps.secondary-color.ramp-grey.05',
  'sys-ramps.tertiary-color.ramp-blue.01',
  'sys-ramps.tertiary-color.ramp-blue.03',
  'sys-ramps.tertiary-color.ramp-blue.02',
  'sys-ramps.tertiary-color.ramp-orange.03',
  'sys-ramps.tertiary-color.ramp-purple.02',
  'sys-ramps.tertiary-color.ramp-purple.01',
  'sys-ramps.tertiary-color.ramp-purple.03',
  'sys-ramps.secondary-color.ramp-teal.06',
  'sys-ramps.secondary-color.ramp-teal.05',
  'sys-ramps.secondary-color.ramp-teal.04',
  'sys-ramps.secondary-color.ramp-grey.06',
  'sys-ramps.secondary-color.ramp-teal.02',
  'sys-ramps.ramp-system.black',
  'sys-ramps.ramp-system.Green',
  'sys-ramps.ramp-system.Lemon',
  'sys-ramps.ramp-system.Mango',
  'sys-ramps.ramp-system.Pomegranate',
  'sys-ramps.ramp-system.white'
] as const);
export type Sys_rampsPaths = typeof sys_rampsPaths;

/**
* @typedef {typeof sys_brand_aliasPaths} Sys_brand_aliasPaths - All the valid paths for the collection sys-brand alias.
* To use this type you can do: `@type {import('path/to/myTokensFile').Sys_brand_aliasPaths}`
*/
export const sys_brand_aliasPaths = /** @type {const} */ ([
  'sys-brand alias.day.secondary-color.teal.Teal09',
  'sys-brand alias.night.primary-color.core-brand.ActiveTeal',
  'sys-brand alias.day.secondary-color.grey.Grey03',
  'sys-brand alias.night.secondary-color.teal.Teal10',
  'sys-brand alias.day.secondary-color.teal.Teal10',
  'sys-brand alias.night.secondary-color.teal.Teal03',
  'sys-brand alias.day.secondary-color.teal.Teal11',
  'sys-brand alias.night.secondary-color.teal.Teal01',
  'sys-brand alias.Transparent',
  'sys-brand alias.toDelete',
  'sys-brand alias.day.primary-color.core-brand.CalmWhite',
  'sys-brand alias.day.system.bad',
  'sys-brand alias.night.system.bad',
  'sys-brand alias.day.secondary-color.teal.Teal03',
  'sys-brand alias.night.secondary-color.teal.Teal08',
  'sys-brand alias.day.secondary-color.grey.Grey02',
  'sys-brand alias.night.secondary-color.teal.Teal11',
  'sys-brand alias.day.system.good',
  'sys-brand alias.night.secondary-color.teal.Teal09',
  'sys-brand alias.night.secondary-color.grey.Grey01',
  'sys-brand alias.Overlay',
  'sys-brand alias.Overla-muted',
  'sys-brand alias.day.secondary-color.grey.Grey01',
  'sys-brand alias.day.system.warn',
  'sys-brand alias.night.system.warn',
  'sys-brand alias.whatShouldIBe',
  'sys-brand alias.day.secondary-color.grey.Grey07',
  'sys-brand alias.day.secondary-color.teal.Teal07',
  'sys-brand alias.night.secondary-color.teal.Teal07',
  'sys-brand alias.day.secondary-color.grey.Grey04',
  'sys-brand alias.night.primary-color.core-brand.ConfidentBlack',
  'sys-brand alias.day.primary-color.core-brand.ActiveTeal',
  'sys-brand alias.day.secondary-color.grey.Grey05',
  'sys-brand alias.day.primary-color.core-brand.ConfidentBlack',
  'sys-brand alias.day.secondary-color.teal.Teal01',
  'sys-brand alias.day.tertiary-color.blue.BuzzyBlue',
  'sys-brand alias.night.tertiary-color.blue.BuzzyBlue',
  'sys-brand alias.day.tertiary-color.blue.ElectricNavy',
  'sys-brand alias.night.tertiary-color.blue.ElectricNavy',
  'sys-brand alias.day.tertiary-color.blue.SteelBlue',
  'sys-brand alias.night.tertiary-color.blue.SteelBlue',
  'sys-brand alias.day.tertiary-color.orange.BouncyOrange',
  'sys-brand alias.night.tertiary-color.orange.BouncyOrange',
  'sys-brand alias.day.tertiary-color.orange.Pomegranate',
  'sys-brand alias.night.tertiary-color.orange.Pomegranate',
  'sys-brand alias.day.tertiary-color.orange.PunchyPlum',
  'sys-brand alias.night.tertiary-color.orange.Plum',
  'sys-brand alias.day.tertiary-color.purple.Iris',
  'sys-brand alias.night.tertiary-color.purple.Iris',
  'sys-brand alias.day.tertiary-color.purple.Lilac',
  'sys-brand alias.night.tertiary-color.purple.LivelyLilac',
  'sys-brand alias.day.tertiary-color.purple.VibrantViolet',
  'sys-brand alias.night.tertiary-color.purple.VibrantViolet',
  'sys-brand alias.day.secondary-color.teal.Teal08',
  'sys-brand alias.night.primary-color.core-brand.CalmWhite',
  'sys-brand alias.day.secondary-color.teal.Teal06',
  'sys-brand alias.night.system.good',
  'sys-brand alias.night.secondary-color.teal.Teal04',
  'sys-brand alias.day.secondary-color.grey.Grey06',
  'sys-brand alias.night.secondary-color.teal.Teal06',
  'sys-brand alias.day.secondary-color.teal.Teal02',
  'sys-brand alias.day.secondary-color.teal.Teal04',
  'sys-brand alias.day.secondary-color.teal.Teal05',
  'sys-brand alias.day.system.black',
  'sys-brand alias.day.system.white',
  'sys-brand alias.day.tertiary-color.yellow.Lemon',
  'sys-brand alias.day.tertiary-color.yellow.Mango',
  'sys-brand alias.night.secondary-color.grey.Grey02',
  'sys-brand alias.night.secondary-color.grey.Grey03',
  'sys-brand alias.night.secondary-color.grey.Grey04',
  'sys-brand alias.night.secondary-color.grey.Grey05',
  'sys-brand alias.night.secondary-color.grey.Grey06',
  'sys-brand alias.night.secondary-color.grey.Grey07',
  'sys-brand alias.night.secondary-color.teal.Teal02',
  'sys-brand alias.night.secondary-color.teal.Teal05',
  'sys-brand alias.night.system.black',
  'sys-brand alias.night.system.white',
  'sys-brand alias.night.tertiary-color.yellow.Lemon',
  'sys-brand alias.night.tertiary-color.yellow.Mango',
  'sys-brand alias.unsure??'
] as const);
export type Sys_brand_aliasPaths = typeof sys_brand_aliasPaths;

/**
* @typedef {typeof aModePaths} AmodePaths - All the valid paths for the collection aMode.
* To use this type you can do: `@type {import('path/to/myTokensFile').AmodePaths}`
*/
export const aModePaths = /** @type {const} */ ([
  'aMode.bg.action.primary.default',
  'aMode.bg.action.primary.disabled',
  'aMode.bg.action.primary.focus',
  'aMode.bg.action.primary.hover',
  'aMode.bg.action.primary.pressed',
  'aMode.bg.action.secondary.default',
  'aMode.bg.action.secondary.disabled',
  'aMode.bg.action.secondary.focus',
  'aMode.bg.action.secondary.hover',
  'aMode.bg.action.secondary.pressed',
  'aMode.bg.action.tertiary.default',
  'aMode.bg.action.tertiary.disabled',
  'aMode.bg.action.tertiary.focus',
  'aMode.bg.action.tertiary.hover',
  'aMode.bg.action.tertiary.pressed',
  'aMode.bg.action.x ghost.default',
  'aMode.bg.action.x muted.default',
  'aMode.bg.action.x muted.disabled',
  'aMode.bg.action.x muted.focus',
  'aMode.bg.action.x muted.hover',
  'aMode.bg.action.x muted.pressed',
  'aMode.bg.base.bad',
  'aMode.bg.base.decorative',
  'aMode.bg.base.default',
  'aMode.bg.base.eclipse.default-eclipse',
  'aMode.bg.base.eclipse.good-eclipse',
  'aMode.bg.base.eclipse.header-eclipse',
  'aMode.bg.base.emphasis',
  'aMode.bg.base.good',
  'aMode.bg.base.header',
  'aMode.bg.base.inverse.secondary',
  'aMode.bg.base.overlay',
  'aMode.bg.base.overlay-muted',
  'aMode.bg.base.secondary',
  'aMode.bg.base.warn',
  'aMode.bg.control.bad.default',
  'aMode.bg.control.default',
  'aMode.bg.control.disabled',
  'aMode.bg.control.focus',
  'aMode.bg.control.hover',
  'aMode.bg.control.pressed',
  'aMode.bg.control.selected.inverse.selected-counter-inverse',
  'aMode.bg.control.selected.inverse.selected-disabled-onInvert',
  'aMode.bg.control.selected.inverse.selected-focus-inverse',
  'aMode.bg.control.selected.inverse.selected-hover-inverse',
  'aMode.bg.control.selected.inverse.selected-inverse',
  'aMode.bg.control.selected.inverse.selected-pressed-inverse',
  'aMode.bg.control.selected.selected',
  'aMode.bg.control.selected.selected-counter',
  'aMode.bg.control.selected.selected-disabled',
  'aMode.bg.control.selected.selected-focus',
  'aMode.bg.control.selected.selected-hover',
  'aMode.bg.control.selected.selected-pressed',
  'aMode.bg.control.unselected.unselected',
  'aMode.bg.control.unselected.unselected-counter',
  'aMode.bg.control.unselected.unselected-hover',
  'aMode.bg.control.unselected.unselected-pressed',
  'aMode.bg.nav.disabled',
  'aMode.bg.nav.focus',
  'aMode.bg.nav.hover',
  'aMode.bg.nav.pressed',
  'aMode.bg.nav.selected',
  'aMode.bg.nav.selected-counter',
  'aMode.bg.nav.selected-disabled',
  'aMode.bg.nav.selected-focus',
  'aMode.bg.nav.selected-hover',
  'aMode.bg.nav.selected-pressed',
  'aMode.bg.nav.unselected',
  'aMode.bg.nav.unselected-counter',
  'aMode.bg.nav.unselected-hover',
  'aMode.bg.nav.unselected-pressed',
  'aMode.border.action.muted.default',
  'aMode.border.action.muted.disabled',
  'aMode.border.action.muted.focus',
  'aMode.border.action.muted.hover',
  'aMode.border.action.muted.pressed',
  'aMode.border.action.primary.default',
  'aMode.border.action.primary.default-onInvert',
  'aMode.border.action.primary.disabled',
  'aMode.border.action.primary.focus',
  'aMode.border.action.primary.hover',
  'aMode.border.action.primary.pressed',
  'aMode.border.action.secondary.default',
  'aMode.border.action.secondary.default old',
  'aMode.border.action.secondary.disabled',
  'aMode.border.action.secondary.focus',
  'aMode.border.action.secondary.hover',
  'aMode.border.action.secondary.inverse.focus-onInvert',
  'aMode.border.action.secondary.inverse.hover-onInvert',
  'aMode.border.action.secondary.pressed',
  'aMode.border.action.tertiary.default-onInvert',
  'aMode.border.action.tertiary.disabled',
  'aMode.border.action.tertiary.focus',
  'aMode.border.action.tertiary.hover',
  'aMode.border.action.tertiary.pressed',
  'aMode.border.base.contrast',
  'aMode.border.base.default',
  'aMode.border.base.divider',
  'aMode.border.base.emphasis',
  'aMode.border.base.secondary',
  'aMode.border.control.bad.default',
  'aMode.border.control.decorative.default',
  'aMode.border.control.default',
  'aMode.border.control.disabled',
  'aMode.border.control.focus',
  'aMode.border.control.hover',
  'aMode.border.control.pressed',
  'aMode.border.control.selected',
  'aMode.border.control.selected-disabled',
  'aMode.border.control.selected-focus',
  'aMode.border.control.selected-hover',
  'aMode.border.control.unselected',
  'aMode.border.focus-ring',
  'aMode.border.focus-ring-onInvert',
  'aMode.border.nav.disabled',
  'aMode.border.nav.focus',
  'aMode.border.nav.hover',
  'aMode.border.nav.pressed',
  'aMode.border.nav.selected',
  'aMode.border.nav.selected-counter',
  'aMode.border.nav.selected-disabled',
  'aMode.border.nav.selected-focus',
  'aMode.border.nav.selected-hover',
  'aMode.border.nav.selected-pressed',
  'aMode.border.nav.unselected',
  'aMode.border.nav.unselected-counter',
  'aMode.border.nav.unselected-hover',
  'aMode.border.nav.unselected-pressed',
  'aMode.dojo-patterns.blue.buzzyBlue',
  'aMode.dojo-patterns.blue.electricNavy',
  'aMode.dojo-patterns.blue.steelBlue',
  'aMode.dojo-patterns.orange.bouncyOrange',
  'aMode.dojo-patterns.orange.pomegranate',
  'aMode.dojo-patterns.orange.punchyPlum',
  'aMode.dojo-patterns.purple.Iris',
  'aMode.dojo-patterns.purple.livelyLilac',
  'aMode.dojo-patterns.purple.vibrantViolet',
  'aMode.dojo-patterns.teal.teal07',
  'aMode.dojo-patterns.teal.teal08',
  'aMode.dojo-patterns.teal.teal09',
  'aMode.elevation.blur.blur-10',
  'aMode.elevation.blur.blur-14',
  'aMode.elevation.blur.blur-2',
  'aMode.elevation.blur.blur-25',
  'aMode.elevation.blur.blur-44',
  'aMode.elevation.blur.blur-76',
  'aMode.elevation.shadow.shadow-10%',
  'aMode.elevation.shadow.shadow-13%',
  'aMode.elevation.shadow.shadow-3%',
  'aMode.elevation.shadow.shadow-4%',
  'aMode.elevation.spread.s-0',
  'aMode.elevation.spread.s-minus-18',
  'aMode.elevation.spread.s-minus-2',
  'aMode.elevation.spread.s-minus-32',
  'aMode.elevation.spread.s-minus-5',
  'aMode.elevation.x.x',
  'aMode.elevation.y.y-0',
  'aMode.elevation.y.y-10',
  'aMode.elevation.y.y-18',
  'aMode.elevation.y.y-2',
  'aMode.elevation.y.y-5',
  'aMode.elevation.y.y-65',
  'aMode.icon.action.ghost.default',
  'aMode.icon.action.ghost.disabled',
  'aMode.icon.action.ghost.focus',
  'aMode.icon.action.ghost.hover',
  'aMode.icon.action.ghost.pressed',
  'aMode.icon.action.ghost.visited',
  'aMode.icon.action.muted.default',
  'aMode.icon.action.muted.disabled',
  'aMode.icon.action.muted.focus',
  'aMode.icon.action.muted.hover',
  'aMode.icon.action.muted.pressed',
  'aMode.icon.action.muted.visited',
  'aMode.icon.action.primary.default',
  'aMode.icon.action.primary.default-onInvert',
  'aMode.icon.action.primary.disabled',
  'aMode.icon.action.primary.focus',
  'aMode.icon.action.primary.hover',
  'aMode.icon.action.primary.pressed',
  'aMode.icon.action.primary.visited',
  'aMode.icon.action.secondary.default',
  'aMode.icon.action.secondary.default-onInvert',
  'aMode.icon.action.secondary.disabled',
  'aMode.icon.action.secondary.focus',
  'aMode.icon.action.secondary.hover',
  'aMode.icon.action.secondary.pressed',
  'aMode.icon.action.secondary.visited',
  'aMode.icon.base.bad',
  'aMode.icon.base.brand',
  'aMode.icon.base.decorative',
  'aMode.icon.base.good',
  'aMode.icon.base.good-OnInvert',
  'aMode.icon.base.primary',
  'aMode.icon.base.primary-onInvert',
  'aMode.icon.base.secondary',
  'aMode.icon.base.warn',
  'aMode.icon.control.bad.default',
  'aMode.icon.control.decorative.default',
  'aMode.icon.control.default',
  'aMode.icon.control.disabled',
  'aMode.icon.control.focus',
  'aMode.icon.control.hover',
  'aMode.icon.control.label.default',
  'aMode.icon.control.label.disabled',
  'aMode.icon.control.placeholder.default',
  'aMode.icon.control.placeholder.disabled',
  'aMode.icon.control.pressed',
  'aMode.icon.control.secondary.default',
  'aMode.icon.control.selected',
  'aMode.icon.control.selected-disabled',
  'aMode.icon.control.selected-focus',
  'aMode.icon.control.selected-hover',
  'aMode.icon.control.unselected',
  'aMode.icon.mealVoucher.--sodexo bottom',
  'aMode.icon.mealVoucher.--sodexo top',
  'aMode.icon.mealVoucher.--swile',
  'aMode.icon.mealVoucher.--upday-background',
  'aMode.icon.mealVoucher.--upday-foreground',
  'aMode.icon.mealVoucher.bg.--edenred',
  'aMode.icon.mealVoucher.bg.--sodexo',
  'aMode.icon.mealVoucher.bg.--swile',
  'aMode.icon.mealVoucher.bg.--upday',
  'aMode.icon.nav.disabled',
  'aMode.icon.nav.focus',
  'aMode.icon.nav.hover',
  'aMode.icon.nav.inverse.disabled',
  'aMode.icon.nav.inverse.focus',
  'aMode.icon.nav.inverse.hover',
  'aMode.icon.nav.inverse.pressed',
  'aMode.icon.nav.inverse.selected',
  'aMode.icon.nav.inverse.selected-disabled',
  'aMode.icon.nav.inverse.selected-focus',
  'aMode.icon.nav.inverse.selected-hover',
  'aMode.icon.nav.inverse.unselected',
  'aMode.icon.nav.pressed',
  'aMode.icon.nav.selected',
  'aMode.icon.nav.selected-disabled',
  'aMode.icon.nav.selected-focus',
  'aMode.icon.nav.selected-hover',
  'aMode.icon.nav.unselected',
  'aMode.icon.paymentLogos.--amex-background',
  'aMode.icon.paymentLogos.--amex-foreground',
  'aMode.icon.paymentLogos.--dinersInt-background',
  'aMode.icon.paymentLogos.--dinersInt-foreground',
  'aMode.icon.paymentLogos.--discover',
  'aMode.icon.paymentLogos.--mastercard end',
  'aMode.icon.paymentLogos.--mastercard middle',
  'aMode.icon.paymentLogos.--mastercard start',
  'aMode.icon.paymentLogos.--visa',
  'aMode.icon.paymentLogos.bg.--amex',
  'aMode.icon.paymentLogos.bg.--dinersInt',
  'aMode.icon.paymentLogos.bg.--discover',
  'aMode.icon.paymentLogos.bg.--mastercard',
  'aMode.icon.paymentLogos.bg.--visa',
  'aMode.text.action.ghost.default',
  'aMode.text.action.ghost.disabled',
  'aMode.text.action.ghost.focus',
  'aMode.text.action.ghost.hover',
  'aMode.text.action.ghost.pressed',
  'aMode.text.action.ghost.visited',
  'aMode.text.action.muted.default',
  'aMode.text.action.muted.disabled',
  'aMode.text.action.muted.focus',
  'aMode.text.action.muted.hover',
  'aMode.text.action.muted.pressed',
  'aMode.text.action.muted.visited',
  'aMode.text.action.primary.default',
  'aMode.text.action.primary.disabled',
  'aMode.text.action.primary.focus',
  'aMode.text.action.primary.hover',
  'aMode.text.action.primary.pressed',
  'aMode.text.action.primary.visited',
  'aMode.text.action.secondary.default',
  'aMode.text.action.secondary.disabled',
  'aMode.text.action.secondary.focus',
  'aMode.text.action.secondary.hover',
  'aMode.text.action.secondary.inverse.default-onInvert',
  'aMode.text.action.secondary.inverse.foucs-onInvert',
  'aMode.text.action.secondary.inverse.hover-onInvert',
  'aMode.text.action.secondary.pressed',
  'aMode.text.action.secondary.visited',
  'aMode.text.action.tertiary.default-onInvert',
  'aMode.text.action.tertiary.focus-onInvert',
  'aMode.text.action.tertiary.hover-onInvert',
  'aMode.text.action.tertiary.pressed-onInvert',
  'aMode.text.base.bad',
  'aMode.text.base.brand',
  'aMode.text.base.decorative',
  'aMode.text.base.good',
  'aMode.text.base.header-emphasis',
  'aMode.text.base.inverse.good-inverse',
  'aMode.text.base.inverse.primary-inverse',
  'aMode.text.base.inverse.secondary',
  'aMode.text.base.primary',
  'aMode.text.base.secondary',
  'aMode.text.base.warn',
  'aMode.text.control.bad.default',
  'aMode.text.control.default',
  'aMode.text.control.disabled',
  'aMode.text.control.focus',
  'aMode.text.control.hover',
  'aMode.text.control.label.bad',
  'aMode.text.control.label.default',
  'aMode.text.control.label.disabled',
  'aMode.text.control.placeholder.default',
  'aMode.text.control.placeholder.disabled',
  'aMode.text.control.pressed',
  'aMode.text.control.selected',
  'aMode.text.control.selected-disabled',
  'aMode.text.control.selected-focus',
  'aMode.text.control.selected-hover',
  'aMode.text.control.unselected',
  'aMode.text.nav.default',
  'aMode.text.nav.disabled',
  'aMode.text.nav.focus',
  'aMode.text.nav.hover',
  'aMode.text.nav.inverse.default-inverse',
  'aMode.text.nav.pressed',
  'aMode.text.nav.selected',
  'aMode.text.nav.selected-disabled',
  'aMode.text.nav.selected-focus',
  'aMode.text.nav.selected-hover',
  'aMode.text.nav.unselected'
] as const);
export type AmodePaths = typeof aModePaths;

/**
* @typedef {typeof com_font_sizePaths} Com_font_sizePaths - All the valid paths for the collection com-font-size.
* To use this type you can do: `@type {import('path/to/myTokensFile').Com_font_sizePaths}`
*/
export const com_font_sizePaths = /** @type {const} */ ([
  'com-font-size.3',
  'com-font-size.4',
  'com-font-size.5',
  'com-font-size.6',
  'com-font-size.8',
  'com-font-size.10',
  'com-font-size.12',
  'com-font-size.14',
  'com-font-size.18',
  'com-font-size.24',
  'com-font-size.16_5',
  'com-font-size.3_5'
] as const);
export type Com_font_sizePaths = typeof com_font_sizePaths;

/**
* @typedef {typeof com_font_weightPaths} Com_font_weightPaths - All the valid paths for the collection com-font-weight.
* To use this type you can do: `@type {import('path/to/myTokensFile').Com_font_weightPaths}`
*/
export const com_font_weightPaths = /** @type {const} */ ([
  'com-font-weight.bold',
  'com-font-weight.display',
  'com-font-weight.medium',
  'com-font-weight.regular'
] as const);
export type Com_font_weightPaths = typeof com_font_weightPaths;

/**
* @typedef {typeof densityPaths} DensityPaths - All the valid paths for the collection density.
* To use this type you can do: `@type {import('path/to/myTokensFile').DensityPaths}`
*/
export const densityPaths = /** @type {const} */ ([
  'density.sys.sys-8px',
  'density.border (b-).b-l',
  'density.sys.sys-4px',
  'density.border (b-).b-m',
  'density.sys.sys-0px',
  'density.border (b-).b-none',
  'density.sys.sys-2•5px',
  'density.border (b-).b-s',
  'density.sys.sys-12px',
  'density.border (b-).b-xl',
  'density.sys.sys-1•5px',
  'density.border (b-).b-xs',
  'density.sys.sys-0',
  'density.gap (g-).g-0',
  'density.gap (g-).g-0px',
  'density.gap (g-).g-12px',
  'density.sys.sys-2px',
  'density.gap (g-).g-2px',
  'density.sys.sys-8',
  'density.gap (g-).g-2xl',
  'density.sys.sys-1',
  'density.gap (g-).g-2xs',
  'density.sys.sys-10',
  'density.gap (g-).g-3xl',
  'density.sys.sys-0•5',
  'density.gap (g-).g-3xs',
  'density.gap (g-).g-4px',
  'density.sys.sys-12',
  'density.gap (g-).g-4xl',
  'density.sys.sys-18',
  'density.gap (g-).g-5xl',
  'density.sys.sys-24',
  'density.gap (g-).g-6xl',
  'density.gap (g-).g-8px',
  'density.sys.sys-5px',
  'density.gap (g-).g-focus-ring',
  'density.sys.sys-5',
  'density.gap (g-).g-l',
  'density.sys.sys-4',
  'density.gap (g-).g-m',
  'density.sys.sys-3',
  'density.gap (g-).g-s',
  'density.sys.sys-6',
  'density.gap (g-).g-xl',
  'density.sys.sys-2',
  'density.gap (g-).g-xs',
  'density.padding (p-).p-0',
  'density.padding (p-).p-0px',
  'density.padding (p-).p-12px',
  'density.padding (p-).p-2px',
  'density.padding (p-).p-2xl',
  'density.padding (p-).p-2xs',
  'density.padding (p-).p-3xl',
  'density.padding (p-).p-3xs',
  'density.padding (p-).p-4px',
  'density.padding (p-).p-4xl',
  'density.padding (p-).p-5xl',
  'density.padding (p-).p-6xl',
  'density.padding (p-).p-8px',
  'density.padding (p-).p-l',
  'density.padding (p-).p-m',
  'density.padding (p-).p-s',
  'density.padding (p-).p-xl',
  'density.padding (p-).p-xs',
  'density.pane (v-).gutter (g-).v-g-2xl',
  'density.pane (v-).gutter (g-).v-g-compact',
  'density.pane (v-).gutter (g-).v-g-expanded',
  'density.pane (v-).gutter (g-).v-g-extra-large',
  'density.pane (v-).gutter (g-).v-g-large',
  'density.pane (v-).gutter (g-).v-g-medium',
  'density.pane (v-).gutter (g-).v-g-tiny',
  'density.pane (v-).height (h-).v-h-2xl',
  'density.pane (v-).height (h-).v-h-compact',
  'density.pane (v-).height (h-).v-h-expanded',
  'density.pane (v-).height (h-).v-h-extra-large',
  'density.pane (v-).height (h-).v-h-large',
  'density.pane (v-).height (h-).v-h-medium',
  'density.pane (v-).height (h-).v-h-tiny',
  'density.pane (v-).margin (m-).v-m-2xl',
  'density.pane (v-).margin (m-).v-m-compact',
  'density.pane (v-).margin (m-).v-m-expanded',
  'density.pane (v-).margin (m-).v-m-extra-large',
  'density.pane (v-).margin (m-).v-m-large',
  'density.pane (v-).margin (m-).v-m-medium',
  'density.pane (v-).margin (m-).v-m-tiny',
  'density.pane (v-).width (w-).v-w-2xl',
  'density.pane (v-).width (w-).v-w-compact',
  'density.pane (v-).width (w-).v-w-expanded',
  'density.pane (v-).width (w-).v-w-extra-large',
  'density.pane (v-).width (w-).v-w-large',
  'density.pane (v-).width (w-).v-w-medium',
  'density.pane (v-).width (w-).v-w-tiny',
  'density.sys.sys-999px',
  'density.radius (r-).r-circle',
  'density.sys.sys-32px',
  'density.radius (r-).r-l',
  'density.sys.sys-24px',
  'density.radius (r-).r-m',
  'density.radius (r-).r-none',
  'density.sys.sys-16px',
  'density.radius (r-).r-s',
  'density.sys.sys-48px',
  'density.radius (r-).r-xl',
  'density.radius (r-).r-xs',
  'density.sys.sys-1px'
] as const);
export type DensityPaths = typeof densityPaths;

/**
* @typedef {typeof EightShapes_SpecsPaths} Eightshapes_specsPaths - All the valid paths for the collection EightShapes Specs.
* To use this type you can do: `@type {import('path/to/myTokensFile').Eightshapes_specsPaths}`
*/
export const EightShapes_SpecsPaths = /** @type {const} */ ([
  'EightShapes Specs.Annotation.Alignment grid',
  'EightShapes Specs.Annotation.Direction arrow',
  'EightShapes Specs.Annotation.Element outline',
  'EightShapes Specs.Annotation.Element overlay',
  'EightShapes Specs.Annotation.Item size',
  'EightShapes Specs.Annotation.Item spacing line',
  'EightShapes Specs.Annotation.Item spacing overlay',
  'EightShapes Specs.Annotation.Marker fill',
  'EightShapes Specs.Annotation.Marker text',
  'EightShapes Specs.Annotation.Padding line',
  'EightShapes Specs.Annotation.Padding overlay',
  'EightShapes Specs.Annotation.Padding size',
  'EightShapes Specs.Artwork background',
  'EightShapes Specs.Artwork stroke',
  'EightShapes Specs.Attributes.Dependency fill',
  'EightShapes Specs.Attributes.Dependency stroke',
  'EightShapes Specs.Attributes.Dependency text',
  'EightShapes Specs.Attributes.Icon stroke',
  'EightShapes Specs.Attributes.Raw value text',
  'EightShapes Specs.Attributes.Style fill',
  'EightShapes Specs.Attributes.Style stroke',
  'EightShapes Specs.Attributes.Style text',
  'EightShapes Specs.Attributes.Token fill',
  'EightShapes Specs.Attributes.Token text',
  'EightShapes Specs.Attributes.Variable fill',
  'EightShapes Specs.Attributes.Variable stroke',
  'EightShapes Specs.Attributes.Variable text',
  'EightShapes Specs.Background',
  'EightShapes Specs.Text.Primary',
  'EightShapes Specs.Text.Secondary'
] as const);
export type Eightshapes_specsPaths = typeof EightShapes_SpecsPaths;

/**
* @typedef {ColorPaths | DimensionPaths | ShadowPaths | ShadowsPaths | TextstylePaths | Sys_rampsPaths | Sys_brand_aliasPaths | AmodePaths | Com_font_sizePaths | Com_font_weightPaths | DensityPaths | Eightshapes_specsPaths} AllPath - All possible paths
*/
export type AllPath = ColorPaths | DimensionPaths | ShadowPaths | ShadowsPaths | TextstylePaths | Sys_rampsPaths | Sys_brand_aliasPaths | AmodePaths | Com_font_sizePaths | Com_font_weightPaths | DensityPaths | Eightshapes_specsPaths;

/**
* @typedef {typeof pathsByType} PathsByType - All the paths for a given token type. Needed for `getTokensByType`
*/
const pathsByType = /** @type {const} */ ({
  color: colorPaths,
  dimension: dimensionPaths,
  shadow: shadowPaths,
  shadows: shadowsPaths,
  textStyle: textStylePaths,
}) as const;
type PathsByType = typeof pathsByType;

/**
* @typedef {typeof colorModes[number]} ColorModes - All the valid modes of color.
* To use this type you can do: `@type {import('path/to/myTokensFile').ColorModes}`
*/
export const colorModes = /** @type {const} */ ([
  'value',   'alias',
  'day',     'night',
  'default', 'Dark',
  'Light'
]) as const;
export type ColorModes = typeof colorModes[number];

/**
* @typedef {typeof dimensionModes[number]} DimensionModes - All the valid modes of dimension.
* To use this type you can do: `@type {import('path/to/myTokensFile').DimensionModes}`
*/
export const dimensionModes = /** @type {const} */ ([ 'day', 'night', 'catchUp (3)', 'ketchup (default (4))', 'Mode 1' ]) as const;
export type DimensionModes = typeof dimensionModes[number];

/**
* @typedef {typeof shadowModes[number]} ShadowModes - All the valid modes of shadow.
* To use this type you can do: `@type {import('path/to/myTokensFile').ShadowModes}`
*/
export const shadowModes = /** @type {const} */ ([ 'default' ]) as const;
export type ShadowModes = typeof shadowModes[number];

/**
* @typedef {typeof shadowsModes[number]} ShadowsModes - All the valid modes of shadows.
* To use this type you can do: `@type {import('path/to/myTokensFile').ShadowsModes}`
*/
export const shadowsModes = /** @type {const} */ ([ 'default' ]) as const;
export type ShadowsModes = typeof shadowsModes[number];

/**
* @typedef {typeof textStyleModes[number]} TextstyleModes - All the valid modes of textStyle.
* To use this type you can do: `@type {import('path/to/myTokensFile').TextstyleModes}`
*/
export const textStyleModes = /** @type {const} */ ([ 'default' ]) as const;
export type TextstyleModes = typeof textStyleModes[number];

/**
* @typedef {typeof sys_rampsModes[number]} Sys_rampsModes - All the valid modes of sys_ramps.
* To use this type you can do: `@type {import('path/to/myTokensFile').Sys_rampsModes}`
*/
export const sys_rampsModes = /** @type {const} */ ([ 'value' ]) as const;
export type Sys_rampsModes = typeof sys_rampsModes[number];

/**
* @typedef {typeof sys_brand_aliasModes[number]} Sys_brand_aliasModes - All the valid modes of sys_brand_alias.
* To use this type you can do: `@type {import('path/to/myTokensFile').Sys_brand_aliasModes}`
*/
export const sys_brand_aliasModes = /** @type {const} */ ([ 'alias' ]) as const;
export type Sys_brand_aliasModes = typeof sys_brand_aliasModes[number];

/**
* @typedef {typeof aModeModes[number]} AmodeModes - All the valid modes of aMode.
* To use this type you can do: `@type {import('path/to/myTokensFile').AmodeModes}`
*/
export const aModeModes = /** @type {const} */ ([ 'day', 'night' ]) as const;
export type AmodeModes = typeof aModeModes[number];

/**
* @typedef {typeof com_font_sizeModes[number]} Com_font_sizeModes - All the valid modes of com_font_size.
* To use this type you can do: `@type {import('path/to/myTokensFile').Com_font_sizeModes}`
*/
export const com_font_sizeModes = /** @type {const} */ ([ 'ketchup (default (4))', 'catchUp (3)' ]) as const;
export type Com_font_sizeModes = typeof com_font_sizeModes[number];

/**
* @typedef {typeof com_font_weightModes[number]} Com_font_weightModes - All the valid modes of com_font_weight.
* To use this type you can do: `@type {import('path/to/myTokensFile').Com_font_weightModes}`
*/
export const com_font_weightModes = /** @type {const} */ ([ 'Mode 1' ]) as const;
export type Com_font_weightModes = typeof com_font_weightModes[number];

/**
* @typedef {typeof densityModes[number]} DensityModes - All the valid modes of density.
* To use this type you can do: `@type {import('path/to/myTokensFile').DensityModes}`
*/
export const densityModes = /** @type {const} */ ([ 'ketchup (default (4))', 'catchUp (3)' ]) as const;
export type DensityModes = typeof densityModes[number];

/**
* @typedef {typeof EightShapes_SpecsModes[number]} Eightshapes_specsModes - All the valid modes of EightShapes_Specs.
* To use this type you can do: `@type {import('path/to/myTokensFile').Eightshapes_specsModes}`
*/
export const EightShapes_SpecsModes = /** @type {const} */ ([ 'Light', 'Dark' ]) as const;
export type Eightshapes_specsModes = typeof EightShapes_SpecsModes[number];

/**
* @typedef {ColorModes | DimensionModes | ShadowModes | ShadowsModes | TextstyleModes | Sys_rampsModes | Sys_brand_aliasModes | AmodeModes | Com_font_sizeModes | Com_font_weightModes | DensityModes | Eightshapes_specsModes} AllMode - All the available modes
*/
export type AllMode = ColorModes | DimensionModes | ShadowModes | ShadowsModes | TextstyleModes | Sys_rampsModes | Sys_brand_aliasModes | AmodeModes | Com_font_sizeModes | Com_font_weightModes | DensityModes | Eightshapes_specsModes;

/**
* @typedef {typeof tokens} Tokens - All the tokens.
* Use `getTokenByMode` to retrieve one.
*/
export const tokens = /** @type {const} */ ({
  'sys-ramps.secondary-color.ramp-teal.09': { value: 'rgb(0, 63, 51)' },
  'sys-brand alias.day.secondary-color.teal.Teal09': { alias: 'rgb(0, 63, 51)' },
  'sys-ramps.primary-color.ramp-core-brand.02': { value: 'rgb(60, 234, 199)' },
  'sys-brand alias.night.primary-color.core-brand.ActiveTeal': { alias: 'rgb(60, 234, 199)' },
  'aMode.bg.action.primary.default': { day: 'rgb(0, 63, 51)', night: 'rgb(60, 234, 199)' },
  'sys-ramps.secondary-color.ramp-grey.03': { value: 'rgb(224, 224, 220)' },
  'sys-brand alias.day.secondary-color.grey.Grey03': { alias: 'rgb(224, 224, 220)' },
  'sys-ramps.secondary-color.ramp-teal.10': { value: 'rgb(0, 45, 36)' },
  'sys-brand alias.night.secondary-color.teal.Teal10': { alias: 'rgb(0, 45, 36)' },
  'aMode.bg.action.primary.disabled': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'sys-brand alias.day.secondary-color.teal.Teal10': { alias: 'rgb(0, 45, 36)' },
  'sys-ramps.secondary-color.ramp-teal.03': { value: 'rgb(164, 244, 229)' },
  'sys-brand alias.night.secondary-color.teal.Teal03': { alias: 'rgb(164, 244, 229)' },
  'aMode.bg.action.primary.focus': { day: 'rgb(0, 45, 36)', night: 'rgb(164, 244, 229)' },
  'aMode.bg.action.primary.hover': { day: 'rgb(0, 45, 36)', night: 'rgb(164, 244, 229)' },
  'sys-ramps.secondary-color.ramp-teal.11': { value: 'rgb(0, 26, 21)' },
  'sys-brand alias.day.secondary-color.teal.Teal11': { alias: 'rgb(0, 26, 21)' },
  'sys-ramps.secondary-color.ramp-teal.01': { value: 'rgb(227, 255, 244)' },
  'sys-brand alias.night.secondary-color.teal.Teal01': { alias: 'rgb(227, 255, 244)' },
  'aMode.bg.action.primary.pressed': { day: 'rgb(0, 26, 21)', night: 'rgb(227, 255, 244)' },
  'sys-brand alias.Transparent': { alias: 'rgba(255, 255, 255, 0)' },
  'aMode.bg.action.secondary.default': { day: 'rgba(255, 255, 255, 0)', night: 'rgba(255, 255, 255, 0)' },
  'sys-brand alias.toDelete': { alias: 'rgb(255, 0, 0)' },
  'aMode.bg.action.secondary.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.secondary.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.secondary.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.secondary.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'sys-ramps.primary-color.ramp-core-brand.01': { value: 'rgb(246, 246, 242)' },
  'sys-brand alias.day.primary-color.core-brand.CalmWhite': { alias: 'rgb(246, 246, 242)' },
  'aMode.bg.action.tertiary.default': { day: 'rgb(246, 246, 242)', night: 'rgb(0, 63, 51)' },
  'aMode.bg.action.tertiary.disabled': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.action.tertiary.focus': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.action.tertiary.hover': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.action.tertiary.pressed': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.action.x ghost.default': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.x muted.default': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.x muted.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.x muted.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.x muted.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.action.x muted.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'sys-ramps.tertiary-color.ramp-orange.02': { value: 'rgb(167, 58, 72)' },
  'sys-brand alias.day.system.bad': { alias: 'rgb(167, 58, 72)' },
  'sys-ramps.tertiary-color.ramp-orange.01': { value: 'rgb(255, 128, 102)' },
  'sys-brand alias.night.system.bad': { alias: 'rgb(255, 128, 102)' },
  'aMode.bg.base.bad': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'sys-brand alias.day.secondary-color.teal.Teal03': { alias: 'rgb(164, 244, 229)' },
  'sys-ramps.secondary-color.ramp-teal.08': { value: 'rgb(25, 98, 84)' },
  'sys-brand alias.night.secondary-color.teal.Teal08': { alias: 'rgb(25, 98, 84)' },
  'aMode.bg.base.decorative': { day: 'rgb(164, 244, 229)', night: 'rgb(25, 98, 84)' },
  'sys-ramps.secondary-color.ramp-grey.02': { value: 'rgb(241, 241, 236)' },
  'sys-brand alias.day.secondary-color.grey.Grey02': { alias: 'rgb(241, 241, 236)' },
  'sys-brand alias.night.secondary-color.teal.Teal11': { alias: 'rgb(0, 26, 21)' },
  'aMode.bg.base.default': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 26, 21)' },
  'aMode.bg.base.eclipse.default-eclipse': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.base.eclipse.good-eclipse': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.base.eclipse.header-eclipse': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.bg.base.emphasis': { day: 'rgb(164, 244, 229)', night: 'rgb(25, 98, 84)' },
  'sys-ramps.secondary-color.ramp-teal.07': { value: 'rgb(34, 132, 113)' },
  'sys-brand alias.day.system.good': { alias: 'rgb(34, 132, 113)' },
  'aMode.bg.base.good': { day: 'rgb(34, 132, 113)', night: 'rgb(0, 26, 21)' },
  'sys-brand alias.night.secondary-color.teal.Teal09': { alias: 'rgb(0, 63, 51)' },
  'aMode.bg.base.header': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'sys-ramps.secondary-color.ramp-grey.01': { value: 'rgb(254, 254, 254)' },
  'sys-brand alias.night.secondary-color.grey.Grey01': { alias: 'rgb(254, 254, 254)' },
  'aMode.bg.base.inverse.secondary': { day: 'rgb(0, 45, 36)', night: 'rgb(254, 254, 254)' },
  'sys-ramps.ramp-system.overlay-90%': { value: 'rgba(24, 15, 6, 0.9)' },
  'sys-brand alias.Overlay': { alias: 'rgba(24, 15, 6, 0.9)' },
  'aMode.bg.base.overlay': { day: 'rgba(24, 15, 6, 0.9)', night: 'rgba(24, 15, 6, 0.9)' },
  'sys-ramps.ramp-system.overlay-30%': { value: 'rgba(24, 15, 6, 0.3)' },
  'sys-brand alias.Overla-muted': { alias: 'rgba(24, 15, 6, 0.3)' },
  'aMode.bg.base.overlay-muted': { day: 'rgba(24, 15, 6, 0.3)', night: 'rgba(24, 15, 6, 0.3)' },
  'sys-brand alias.day.secondary-color.grey.Grey01': { alias: 'rgb(254, 254, 254)' },
  'aMode.bg.base.secondary': { day: 'rgb(254, 254, 254)', night: 'rgb(0, 45, 36)' },
  'sys-ramps.tertiary-color.ramp-yellow.02': { value: 'rgb(250, 188, 60)' },
  'sys-brand alias.day.system.warn': { alias: 'rgb(250, 188, 60)' },
  'sys-ramps.tertiary-color.ramp-yellow.01': { value: 'rgb(255, 203, 70)' },
  'sys-brand alias.night.system.warn': { alias: 'rgb(255, 203, 70)' },
  'aMode.bg.base.warn': { day: 'rgb(250, 188, 60)', night: 'rgb(255, 203, 70)' },
  'aMode.bg.control.bad.default': { day: 'rgb(254, 254, 254)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.control.default': { day: 'rgb(254, 254, 254)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.control.disabled': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 26, 21)' },
  'aMode.bg.control.focus': { day: 'rgb(254, 254, 254)', night: 'rgb(0, 26, 21)' },
  'aMode.bg.control.hover': { day: 'rgb(254, 254, 254)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.control.pressed': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 63, 51)' },
  'aMode.bg.control.selected.inverse.selected-counter-inverse': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'aMode.bg.control.selected.inverse.selected-disabled-onInvert': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 26, 21)' },
  'sys-brand alias.whatShouldIBe': { alias: 'rgb(255, 255, 0)' },
  'aMode.bg.control.selected.inverse.selected-focus-inverse': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'sys-ramps.secondary-color.ramp-grey.07': { value: 'rgb(100, 94, 88)' },
  'sys-brand alias.day.secondary-color.grey.Grey07': { alias: 'rgb(100, 94, 88)' },
  'aMode.bg.control.selected.inverse.selected-hover-inverse': { day: 'rgb(100, 94, 88)', night: 'rgb(254, 254, 254)' },
  'sys-brand alias.day.secondary-color.teal.Teal07': { alias: 'rgb(34, 132, 113)' },
  'sys-brand alias.night.secondary-color.teal.Teal07': { alias: 'rgb(34, 132, 113)' },
  'aMode.bg.control.selected.inverse.selected-inverse': { day: 'rgb(34, 132, 113)', night: 'rgb(34, 132, 113)' },
  'aMode.bg.control.selected.inverse.selected-pressed-inverse': { day: 'rgb(241, 241, 236)', night: 'rgb(25, 98, 84)' },
  'aMode.bg.control.selected.selected': { day: 'rgb(254, 254, 254)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.control.selected.selected-counter': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'aMode.bg.control.selected.selected-disabled': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 26, 21)' },
  'aMode.bg.control.selected.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.control.selected.selected-hover': { day: 'rgb(100, 94, 88)', night: 'rgb(254, 254, 254)' },
  'aMode.bg.control.selected.selected-pressed': { day: 'rgb(241, 241, 236)', night: 'rgb(25, 98, 84)' },
  'aMode.bg.control.unselected.unselected': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'aMode.bg.control.unselected.unselected-counter': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 45, 36)' },
  'aMode.bg.control.unselected.unselected-hover': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'sys-ramps.secondary-color.ramp-grey.04': { value: 'rgb(194, 192, 188)' },
  'sys-brand alias.day.secondary-color.grey.Grey04': { alias: 'rgb(194, 192, 188)' },
  'aMode.bg.control.unselected.unselected-pressed': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.bg.nav.disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.selected': { day: 'rgb(246, 246, 242)', night: 'rgb(60, 234, 199)' },
  'aMode.bg.nav.selected-counter': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.selected-pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.unselected': { day: 'rgba(255, 255, 255, 0)', night: 'rgba(255, 255, 255, 0)' },
  'aMode.bg.nav.unselected-counter': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.unselected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.bg.nav.unselected-pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.action.muted.default': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.muted.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.muted.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.muted.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.muted.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.primary.default': { day: 'rgb(0, 63, 51)', night: 'rgb(60, 234, 199)' },
  'aMode.border.action.primary.default-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.primary.disabled': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.border.action.primary.focus': { day: 'rgb(0, 45, 36)', night: 'rgb(164, 244, 229)' },
  'aMode.border.action.primary.hover': { day: 'rgb(0, 45, 36)', night: 'rgb(164, 244, 229)' },
  'aMode.border.action.primary.pressed': { day: 'rgb(0, 26, 21)', night: 'rgb(227, 255, 244)' },
  'aMode.border.action.secondary.default': { day: 'rgba(255, 255, 255, 0)', night: 'rgba(255, 255, 255, 0)' },
  'aMode.border.action.secondary.default old': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.secondary.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.secondary.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.secondary.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.secondary.inverse.focus-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.secondary.inverse.hover-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.secondary.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.border.action.tertiary.default-onInvert': { day: 'rgb(246, 246, 242)', night: 'rgb(0, 45, 36)' },
  'aMode.border.action.tertiary.disabled': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.border.action.tertiary.focus': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.border.action.tertiary.hover': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.border.action.tertiary.pressed': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 45, 36)' },
  'aMode.border.base.contrast': { day: 'rgb(0, 63, 51)', night: 'rgb(34, 132, 113)' },
  'sys-ramps.primary-color.ramp-core-brand.03': { value: 'rgb(24, 15, 6)' },
  'sys-brand alias.night.primary-color.core-brand.ConfidentBlack': { alias: 'rgb(24, 15, 6)' },
  'aMode.border.base.default': { day: 'rgb(246, 246, 242)', night: 'rgb(24, 15, 6)' },
  'aMode.border.base.divider': { day: 'rgb(224, 224, 220)', night: 'rgb(25, 98, 84)' },
  'sys-brand alias.day.primary-color.core-brand.ActiveTeal': { alias: 'rgb(60, 234, 199)' },
  'aMode.border.base.emphasis': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 63, 51)' },
  'aMode.border.base.secondary': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.control.bad.default': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'aMode.border.control.decorative.default': { day: 'rgb(254, 254, 254)', night: 'rgb(255, 255, 0)' },
  'sys-ramps.secondary-color.ramp-grey.05': { value: 'rgb(142, 138, 133)' },
  'sys-brand alias.day.secondary-color.grey.Grey05': { alias: 'rgb(142, 138, 133)' },
  'aMode.border.control.default': { day: 'rgb(142, 138, 133)', night: 'rgb(34, 132, 113)' },
  'aMode.border.control.disabled': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'sys-brand alias.day.primary-color.core-brand.ConfidentBlack': { alias: 'rgb(24, 15, 6)' },
  'aMode.border.control.focus': { day: 'rgb(24, 15, 6)', night: 'rgb(164, 244, 229)' },
  'aMode.border.control.hover': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.border.control.pressed': { day: 'rgb(24, 15, 6)', night: 'rgb(164, 244, 229)' },
  'aMode.border.control.selected': { day: 'rgb(24, 15, 6)', night: 'rgb(164, 244, 229)' },
  'aMode.border.control.selected-disabled': { day: 'rgb(224, 224, 220)', night: 'rgb(0, 63, 51)' },
  'aMode.border.control.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.control.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.control.unselected': { day: 'rgb(142, 138, 133)', night: 'rgb(34, 132, 113)' },
  'aMode.border.focus-ring': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'sys-brand alias.day.secondary-color.teal.Teal01': { alias: 'rgb(227, 255, 244)' },
  'aMode.border.focus-ring-onInvert': { day: 'rgb(227, 255, 244)', night: 'rgb(24, 15, 6)' },
  'aMode.border.nav.disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.selected': { day: 'rgb(246, 246, 242)', night: 'rgb(60, 234, 199)' },
  'aMode.border.nav.selected-counter': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.selected-pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.unselected': { day: 'rgba(255, 255, 255, 0)', night: 'rgba(255, 255, 255, 0)' },
  'aMode.border.nav.unselected-counter': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.unselected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.border.nav.unselected-pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'sys-ramps.tertiary-color.ramp-blue.01': { value: 'rgb(90, 208, 255)' },
  'sys-brand alias.day.tertiary-color.blue.BuzzyBlue': { alias: 'rgb(90, 208, 255)' },
  'sys-brand alias.night.tertiary-color.blue.BuzzyBlue': { alias: 'rgb(90, 208, 255)' },
  'aMode.dojo-patterns.blue.buzzyBlue': { day: 'rgb(90, 208, 255)', night: 'rgb(90, 208, 255)' },
  'sys-ramps.tertiary-color.ramp-blue.03': { value: 'rgb(5, 32, 109)' },
  'sys-brand alias.day.tertiary-color.blue.ElectricNavy': { alias: 'rgb(5, 32, 109)' },
  'sys-brand alias.night.tertiary-color.blue.ElectricNavy': { alias: 'rgb(5, 32, 109)' },
  'aMode.dojo-patterns.blue.electricNavy': { day: 'rgb(5, 32, 109)', night: 'rgb(5, 32, 109)' },
  'sys-ramps.tertiary-color.ramp-blue.02': { value: 'rgb(48, 120, 182)' },
  'sys-brand alias.day.tertiary-color.blue.SteelBlue': { alias: 'rgb(48, 120, 182)' },
  'sys-brand alias.night.tertiary-color.blue.SteelBlue': { alias: 'rgb(48, 120, 182)' },
  'aMode.dojo-patterns.blue.steelBlue': { day: 'rgb(48, 120, 182)', night: 'rgb(48, 120, 182)' },
  'sys-brand alias.day.tertiary-color.orange.BouncyOrange': { alias: 'rgb(255, 128, 102)' },
  'sys-brand alias.night.tertiary-color.orange.BouncyOrange': { alias: 'rgb(255, 128, 102)' },
  'aMode.dojo-patterns.orange.bouncyOrange': { day: 'rgb(255, 128, 102)', night: 'rgb(255, 128, 102)' },
  'sys-brand alias.day.tertiary-color.orange.Pomegranate': { alias: 'rgb(167, 58, 72)' },
  'sys-brand alias.night.tertiary-color.orange.Pomegranate': { alias: 'rgb(167, 58, 72)' },
  'aMode.dojo-patterns.orange.pomegranate': { day: 'rgb(167, 58, 72)', night: 'rgb(167, 58, 72)' },
  'sys-ramps.tertiary-color.ramp-orange.03': { value: 'rgb(102, 6, 59)' },
  'sys-brand alias.day.tertiary-color.orange.PunchyPlum': { alias: 'rgb(102, 6, 59)' },
  'sys-brand alias.night.tertiary-color.orange.Plum': { alias: 'rgb(102, 6, 59)' },
  'aMode.dojo-patterns.orange.punchyPlum': { day: 'rgb(102, 6, 59)', night: 'rgb(102, 6, 59)' },
  'sys-ramps.tertiary-color.ramp-purple.02': { value: 'rgb(122, 81, 193)' },
  'sys-brand alias.day.tertiary-color.purple.Iris': { alias: 'rgb(122, 81, 193)' },
  'sys-brand alias.night.tertiary-color.purple.Iris': { alias: 'rgb(122, 81, 193)' },
  'aMode.dojo-patterns.purple.Iris': { day: 'rgb(122, 81, 193)', night: 'rgb(122, 81, 193)' },
  'sys-ramps.tertiary-color.ramp-purple.01': { value: 'rgb(175, 139, 255)' },
  'sys-brand alias.day.tertiary-color.purple.Lilac': { alias: 'rgb(175, 139, 255)' },
  'sys-brand alias.night.tertiary-color.purple.LivelyLilac': { alias: 'rgb(175, 139, 255)' },
  'aMode.dojo-patterns.purple.livelyLilac': { day: 'rgb(175, 139, 255)', night: 'rgb(175, 139, 255)' },
  'sys-ramps.tertiary-color.ramp-purple.03': { value: 'rgb(68, 23, 131)' },
  'sys-brand alias.day.tertiary-color.purple.VibrantViolet': { alias: 'rgb(68, 23, 131)' },
  'sys-brand alias.night.tertiary-color.purple.VibrantViolet': { alias: 'rgb(68, 23, 131)' },
  'aMode.dojo-patterns.purple.vibrantViolet': { day: 'rgb(68, 23, 131)', night: 'rgb(68, 23, 131)' },
  'aMode.dojo-patterns.teal.teal07': { day: 'rgb(34, 132, 113)', night: 'rgb(34, 132, 113)' },
  'sys-brand alias.day.secondary-color.teal.Teal08': { alias: 'rgb(25, 98, 84)' },
  'aMode.dojo-patterns.teal.teal08': { day: 'rgb(25, 98, 84)', night: 'rgb(25, 98, 84)' },
  'aMode.dojo-patterns.teal.teal09': { day: 'rgb(0, 63, 51)', night: 'rgb(0, 63, 51)' },
  'aMode.elevation.shadow.shadow-10%': { day: 'rgba(0, 0, 0, 0.1)', night: 'rgba(0, 0, 0, 0.1)' },
  'aMode.elevation.shadow.shadow-13%': { day: 'rgba(0, 0, 0, 0.13)', night: 'rgba(0, 0, 0, 0.13)' },
  'aMode.elevation.shadow.shadow-3%': { day: 'rgba(0, 0, 0, 0.03)', night: 'rgba(0, 0, 0, 0.03)' },
  'aMode.elevation.shadow.shadow-4%': { day: 'rgba(0, 0, 0, 0.04)', night: 'rgba(0, 0, 0, 0.04)' },
  'aMode.icon.action.ghost.default': { day: 'rgb(25, 98, 84)', night: 'rgb(60, 234, 199)' },
  'aMode.icon.action.ghost.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.ghost.focus': { day: 'rgb(25, 98, 84)', night: 'rgb(60, 234, 199)' },
  'aMode.icon.action.ghost.hover': { day: 'rgb(25, 98, 84)', night: 'rgb(60, 234, 199)' },
  'aMode.icon.action.ghost.pressed': { day: 'rgb(24, 15, 6)', night: 'rgb(254, 254, 254)' },
  'aMode.icon.action.ghost.visited': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.muted.default': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.muted.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.muted.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.muted.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.muted.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.muted.visited': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.primary.default': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'sys-brand alias.night.primary-color.core-brand.CalmWhite': { alias: 'rgb(246, 246, 242)' },
  'aMode.icon.action.primary.default-onInvert': { day: 'rgb(0, 63, 51)', night: 'rgb(246, 246, 242)' },
  'aMode.icon.action.primary.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.icon.action.primary.focus': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.icon.action.primary.hover': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.icon.action.primary.pressed': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.icon.action.primary.visited': { day: 'rgb(68, 23, 131)', night: 'rgb(175, 139, 255)' },
  'aMode.icon.action.secondary.default': { day: 'rgb(0, 26, 21)', night: 'rgb(60, 234, 199)' },
  'aMode.icon.action.secondary.default-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.secondary.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.secondary.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.secondary.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.secondary.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.action.secondary.visited': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.icon.base.bad': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'aMode.icon.base.brand': { day: 'rgb(60, 234, 199)', night: 'rgb(60, 234, 199)' },
  'sys-ramps.secondary-color.ramp-teal.06': { value: 'rgb(43, 166, 141)' },
  'sys-brand alias.day.secondary-color.teal.Teal06': { alias: 'rgb(43, 166, 141)' },
  'aMode.icon.base.decorative': { day: 'rgb(43, 166, 141)', night: 'rgb(164, 244, 229)' },
  'sys-ramps.secondary-color.ramp-teal.05': { value: 'rgb(113, 195, 179)' },
  'sys-brand alias.night.system.good': { alias: 'rgb(113, 195, 179)' },
  'aMode.icon.base.good': { day: 'rgb(34, 132, 113)', night: 'rgb(113, 195, 179)' },
  'aMode.icon.base.good-OnInvert': { day: 'rgb(60, 234, 199)', night: 'rgb(60, 234, 199)' },
  'aMode.icon.base.primary': { day: 'rgb(24, 15, 6)', night: 'rgb(246, 246, 242)' },
  'aMode.icon.base.primary-onInvert': { day: 'rgb(246, 246, 242)', night: 'rgb(24, 15, 6)' },
  'sys-ramps.secondary-color.ramp-teal.04': { value: 'rgb(183, 224, 217)' },
  'sys-brand alias.night.secondary-color.teal.Teal04': { alias: 'rgb(183, 224, 217)' },
  'aMode.icon.base.secondary': { day: 'rgb(142, 138, 133)', night: 'rgb(183, 224, 217)' },
  'aMode.icon.base.warn': { day: 'rgb(250, 188, 60)', night: 'rgb(255, 203, 70)' },
  'aMode.icon.control.bad.default': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'aMode.icon.control.decorative.default': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.control.default': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.icon.control.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.icon.control.focus': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.icon.control.hover': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.icon.control.label.default': { day: 'rgb(100, 94, 88)', night: 'rgb(183, 224, 217)' },
  'aMode.icon.control.label.disabled': { day: 'rgb(142, 138, 133)', night: 'rgb(25, 98, 84)' },
  'sys-ramps.secondary-color.ramp-grey.06': { value: 'rgb(124, 117, 110)' },
  'sys-brand alias.day.secondary-color.grey.Grey06': { alias: 'rgb(124, 117, 110)' },
  'sys-brand alias.night.secondary-color.teal.Teal06': { alias: 'rgb(43, 166, 141)' },
  'aMode.icon.control.placeholder.default': { day: 'rgb(124, 117, 110)', night: 'rgb(43, 166, 141)' },
  'aMode.icon.control.placeholder.disabled': { day: 'rgb(142, 138, 133)', night: 'rgb(25, 98, 84)' },
  'aMode.icon.control.pressed': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.icon.control.secondary.default': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.control.selected': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.icon.control.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.control.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.control.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.control.unselected': { day: 'rgb(24, 15, 6)', night: 'rgb(183, 224, 217)' },
  'aMode.icon.mealVoucher.--sodexo bottom': { day: 'rgb(237, 28, 36)', night: 'rgb(237, 28, 36)' },
  'aMode.icon.mealVoucher.--sodexo top': { day: 'rgb(43, 55, 151)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.mealVoucher.--swile': { day: 'rgb(0, 0, 0)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.mealVoucher.--upday-background': { day: 'rgb(29, 184, 218)', night: 'rgb(29, 184, 218)' },
  'aMode.icon.mealVoucher.--upday-foreground': { day: 'rgb(255, 255, 255)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.mealVoucher.bg.--edenred': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 26, 21)' },
  'aMode.icon.mealVoucher.bg.--sodexo': { day: 'rgb(241, 241, 236)', night: 'rgb(43, 55, 151)' },
  'aMode.icon.mealVoucher.bg.--swile': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 0, 0)' },
  'aMode.icon.mealVoucher.bg.--upday': { day: 'rgb(241, 241, 236)', night: 'rgb(29, 184, 218)' },
  'aMode.icon.nav.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.icon.nav.focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.icon.nav.inverse.focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.selected': { day: 'rgb(24, 15, 6)', night: 'rgb(24, 15, 6)' },
  'aMode.icon.nav.inverse.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.inverse.unselected': { day: 'rgb(100, 94, 88)', night: 'rgb(183, 224, 217)' },
  'aMode.icon.nav.pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.selected': { day: 'rgb(24, 15, 6)', night: 'rgb(24, 15, 6)' },
  'aMode.icon.nav.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.icon.nav.unselected': { day: 'rgb(241, 241, 236)', night: 'rgb(183, 224, 217)' },
  'aMode.icon.paymentLogos.--amex-background': { day: 'rgb(255, 255, 255)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.paymentLogos.--amex-foreground': { day: 'rgb(0, 113, 206)', night: 'rgb(0, 113, 206)' },
  'aMode.icon.paymentLogos.--dinersInt-background': { day: 'rgb(0, 121, 190)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.paymentLogos.--dinersInt-foreground': { day: 'rgb(255, 255, 255)', night: 'rgb(0, 121, 190)' },
  'aMode.icon.paymentLogos.--discover': { day: 'rgb(225, 117, 45)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.paymentLogos.--mastercard end': { day: 'rgb(247, 158, 27)', night: 'rgb(247, 158, 27)' },
  'aMode.icon.paymentLogos.--mastercard middle': { day: 'rgb(255, 95, 0)', night: 'rgb(255, 95, 0)' },
  'aMode.icon.paymentLogos.--mastercard start': { day: 'rgb(235, 0, 27)', night: 'rgb(235, 0, 27)' },
  'aMode.icon.paymentLogos.--visa': { day: 'rgb(5, 53, 212)', night: 'rgb(255, 255, 255)' },
  'aMode.icon.paymentLogos.bg.--amex': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 113, 206)' },
  'aMode.icon.paymentLogos.bg.--dinersInt': { day: 'rgb(241, 241, 236)', night: 'rgb(0, 121, 190)' },
  'aMode.icon.paymentLogos.bg.--discover': { day: 'rgb(241, 241, 236)', night: 'rgb(225, 117, 45)' },
  'aMode.icon.paymentLogos.bg.--mastercard': { day: 'rgb(241, 241, 236)', night: 'rgb(38, 38, 38)' },
  'aMode.icon.paymentLogos.bg.--visa': { day: 'rgb(241, 241, 236)', night: 'rgb(5, 53, 212)' },
  'aMode.text.action.ghost.default': { day: 'rgb(25, 98, 84)', night: 'rgb(60, 234, 199)' },
  'aMode.text.action.ghost.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.ghost.focus': { day: 'rgb(25, 98, 84)', night: 'rgb(60, 234, 199)' },
  'aMode.text.action.ghost.hover': { day: 'rgb(25, 98, 84)', night: 'rgb(60, 234, 199)' },
  'aMode.text.action.ghost.pressed': { day: 'rgb(24, 15, 6)', night: 'rgb(254, 254, 254)' },
  'aMode.text.action.ghost.visited': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.muted.default': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.muted.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.muted.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.muted.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.muted.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.muted.visited': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.primary.default': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.text.action.primary.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.text.action.primary.focus': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.text.action.primary.hover': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.text.action.primary.pressed': { day: 'rgb(60, 234, 199)', night: 'rgb(0, 26, 21)' },
  'aMode.text.action.primary.visited': { day: 'rgb(68, 23, 131)', night: 'rgb(175, 139, 255)' },
  'aMode.text.action.secondary.default': { day: 'rgb(0, 26, 21)', night: 'rgb(60, 234, 199)' },
  'aMode.text.action.secondary.disabled': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.focus': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.hover': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.inverse.default-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.inverse.foucs-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.inverse.hover-onInvert': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.pressed': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.secondary.visited': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.action.tertiary.default-onInvert': { day: 'rgb(0, 63, 51)', night: 'rgb(60, 234, 199)' },
  'aMode.text.action.tertiary.focus-onInvert': { day: 'rgb(246, 246, 242)', night: 'rgb(246, 246, 242)' },
  'aMode.text.action.tertiary.hover-onInvert': { day: 'rgb(0, 45, 36)', night: 'rgb(164, 244, 229)' },
  'aMode.text.action.tertiary.pressed-onInvert': { day: 'rgb(0, 26, 21)', night: 'rgb(227, 255, 244)' },
  'aMode.text.base.bad': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'aMode.text.base.brand': { day: 'rgb(60, 234, 199)', night: 'rgb(60, 234, 199)' },
  'aMode.text.base.decorative': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.base.good': { day: 'rgb(34, 132, 113)', night: 'rgb(113, 195, 179)' },
  'aMode.text.base.header-emphasis': { day: 'rgb(24, 15, 6)', night: 'rgb(246, 246, 242)' },
  'aMode.text.base.inverse.good-inverse': { day: 'rgb(24, 15, 6)', night: 'rgb(246, 246, 242)' },
  'aMode.text.base.inverse.primary-inverse': { day: 'rgb(246, 246, 242)', night: 'rgb(24, 15, 6)' },
  'aMode.text.base.inverse.secondary': { day: 'rgb(255, 0, 0)', night: 'rgb(255, 0, 0)' },
  'aMode.text.base.primary': { day: 'rgb(24, 15, 6)', night: 'rgb(246, 246, 242)' },
  'aMode.text.base.secondary': { day: 'rgb(100, 94, 88)', night: 'rgb(183, 224, 217)' },
  'aMode.text.base.warn': { day: 'rgb(250, 188, 60)', night: 'rgb(255, 203, 70)' },
  'aMode.text.control.bad.default': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'aMode.text.control.default': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.text.control.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.text.control.focus': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.text.control.hover': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.text.control.label.bad': { day: 'rgb(167, 58, 72)', night: 'rgb(255, 128, 102)' },
  'aMode.text.control.label.default': { day: 'rgb(100, 94, 88)', night: 'rgb(183, 224, 217)' },
  'aMode.text.control.label.disabled': { day: 'rgb(142, 138, 133)', night: 'rgb(25, 98, 84)' },
  'aMode.text.control.placeholder.default': { day: 'rgb(124, 117, 110)', night: 'rgb(43, 166, 141)' },
  'aMode.text.control.placeholder.disabled': { day: 'rgb(142, 138, 133)', night: 'rgb(25, 98, 84)' },
  'aMode.text.control.pressed': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.text.control.selected': { day: 'rgb(24, 15, 6)', night: 'rgb(227, 255, 244)' },
  'aMode.text.control.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.control.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.control.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.control.unselected': { day: 'rgb(24, 15, 6)', night: 'rgb(183, 224, 217)' },
  'aMode.text.nav.default': { day: 'rgb(246, 246, 242)', night: 'rgb(246, 246, 242)' },
  'aMode.text.nav.disabled': { day: 'rgb(194, 192, 188)', night: 'rgb(25, 98, 84)' },
  'aMode.text.nav.focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.nav.hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.nav.inverse.default-inverse': { day: 'rgb(24, 15, 6)', night: 'rgb(246, 246, 242)' },
  'aMode.text.nav.pressed': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.nav.selected': { day: 'rgb(24, 15, 6)', night: 'rgb(24, 15, 6)' },
  'aMode.text.nav.selected-disabled': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.nav.selected-focus': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.nav.selected-hover': { day: 'rgb(255, 255, 0)', night: 'rgb(255, 255, 0)' },
  'aMode.text.nav.unselected': { day: 'rgb(100, 94, 88)', night: 'rgb(183, 224, 217)' },
  'Color styles._figma/bg-children': { default: 'rgb(234, 218, 255)' },
  'EightShapes Specs.Annotation.Alignment grid': { Dark: 'rgb(135, 143, 145)', Light: 'rgb(107, 107, 107)' },
  'EightShapes Specs.Annotation.Direction arrow': { Dark: 'rgb(135, 143, 145)', Light: 'rgb(107, 107, 107)' },
  'EightShapes Specs.Annotation.Element outline': { Dark: 'rgb(82, 138, 245)', Light: 'rgb(13, 105, 212)' },
  'EightShapes Specs.Annotation.Element overlay': { Dark: 'rgb(82, 138, 245)', Light: 'rgb(13, 105, 212)' },
  'EightShapes Specs.Annotation.Item size': { Dark: 'rgb(240, 92, 41)', Light: 'rgb(197, 70, 0)' },
  'EightShapes Specs.Annotation.Item spacing line': { Dark: 'rgb(240, 92, 41)', Light: 'rgb(197, 70, 0)' },
  'EightShapes Specs.Annotation.Item spacing overlay': { Dark: 'rgb(240, 92, 41)', Light: 'rgb(197, 70, 0)' },
  'EightShapes Specs.Annotation.Marker fill': { Dark: 'rgb(240, 92, 41)', Light: 'rgb(197, 70, 0)' },
  'EightShapes Specs.Annotation.Marker text': { Dark: 'rgb(255, 255, 255)', Light: 'rgb(255, 255, 255)' },
  'EightShapes Specs.Annotation.Padding line': { Dark: 'rgb(41, 163, 74)', Light: 'rgb(0, 125, 0)' },
  'EightShapes Specs.Annotation.Padding overlay': { Dark: 'rgb(41, 163, 74)', Light: 'rgb(0, 125, 0)' },
  'EightShapes Specs.Annotation.Padding size': { Dark: 'rgb(41, 163, 74)', Light: 'rgb(0, 125, 0)' },
  'EightShapes Specs.Artwork background': { Dark: 'rgb(0, 26, 21)', Light: 'rgb(241, 241, 236)' },
  'EightShapes Specs.Artwork stroke': { Dark: 'rgb(13, 18, 20)', Light: 'rgb(242, 242, 242)' },
  'EightShapes Specs.Attributes.Dependency fill': { Dark: 'rgb(13, 18, 20)', Light: 'rgb(242, 242, 242)' },
  'EightShapes Specs.Attributes.Dependency stroke': { Dark: 'rgb(46, 54, 59)', Light: 'rgb(227, 227, 227)' },
  'EightShapes Specs.Attributes.Dependency text': { Dark: 'rgb(255, 255, 255)', Light: 'rgb(0, 0, 0)' },
  'EightShapes Specs.Attributes.Icon stroke': { Dark: 'rgb(135, 143, 145)', Light: 'rgb(107, 107, 107)' },
  'EightShapes Specs.Attributes.Raw value text': { Dark: 'rgb(135, 143, 145)', Light: 'rgb(107, 107, 107)' },
  'EightShapes Specs.Attributes.Style fill': { Dark: 'rgb(13, 18, 20)', Light: 'rgb(242, 242, 242)' },
  'EightShapes Specs.Attributes.Style stroke': { Dark: 'rgb(46, 54, 59)', Light: 'rgb(227, 227, 227)' },
  'EightShapes Specs.Attributes.Style text': { Dark: 'rgb(245, 150, 148)', Light: 'rgb(133, 31, 65)' },
  'EightShapes Specs.Attributes.Token fill': { Dark: 'rgb(13, 18, 20)', Light: 'rgb(240, 240, 240)' },
  'EightShapes Specs.Attributes.Token text': { Dark: 'rgb(245, 150, 148)', Light: 'rgb(133, 31, 65)' },
  'EightShapes Specs.Attributes.Variable fill': { Dark: 'rgb(13, 18, 20)', Light: 'rgb(242, 242, 242)' },
  'EightShapes Specs.Attributes.Variable stroke': { Dark: 'rgb(46, 54, 59)', Light: 'rgb(227, 227, 227)' },
  'EightShapes Specs.Attributes.Variable text': { Dark: 'rgb(245, 150, 148)', Light: 'rgb(133, 31, 65)' },
  'EightShapes Specs.Background': { Dark: 'rgb(33, 38, 41)', Light: 'rgb(254, 254, 254)' },
  'EightShapes Specs.Text.Primary': { Dark: 'rgb(246, 246, 242)', Light: 'rgb(24, 15, 6)' },
  'EightShapes Specs.Text.Secondary': { Dark: 'rgb(183, 224, 217)', Light: 'rgb(100, 94, 88)' },
  'sys-ramps.secondary-color.ramp-teal.02': { value: 'rgb(195, 249, 238)' },
  'sys-brand alias.day.secondary-color.teal.Teal02': { alias: 'rgb(195, 249, 238)' },
  'sys-brand alias.day.secondary-color.teal.Teal04': { alias: 'rgb(183, 224, 217)' },
  'sys-brand alias.day.secondary-color.teal.Teal05': { alias: 'rgb(113, 195, 179)' },
  'sys-brand alias.day.system.black': { alias: 'rgb(0, 0, 0)' },
  'sys-brand alias.day.system.white': { alias: 'rgb(255, 255, 255)' },
  'sys-brand alias.day.tertiary-color.yellow.Lemon': { alias: 'rgb(255, 203, 70)' },
  'sys-brand alias.day.tertiary-color.yellow.Mango': { alias: 'rgb(250, 188, 60)' },
  'sys-brand alias.night.secondary-color.grey.Grey02': { alias: 'rgb(241, 241, 236)' },
  'sys-brand alias.night.secondary-color.grey.Grey03': { alias: 'rgb(224, 224, 220)' },
  'sys-brand alias.night.secondary-color.grey.Grey04': { alias: 'rgb(194, 192, 188)' },
  'sys-brand alias.night.secondary-color.grey.Grey05': { alias: 'rgb(142, 138, 133)' },
  'sys-brand alias.night.secondary-color.grey.Grey06': { alias: 'rgb(124, 117, 110)' },
  'sys-brand alias.night.secondary-color.grey.Grey07': { alias: 'rgb(100, 94, 88)' },
  'sys-brand alias.night.secondary-color.teal.Teal02': { alias: 'rgb(195, 249, 238)' },
  'sys-brand alias.night.secondary-color.teal.Teal05': { alias: 'rgb(113, 195, 179)' },
  'sys-brand alias.night.system.black': { alias: 'rgb(0, 0, 0)' },
  'sys-brand alias.night.system.white': { alias: 'rgb(255, 255, 255)' },
  'sys-brand alias.night.tertiary-color.yellow.Lemon': { alias: 'rgb(255, 203, 70)' },
  'sys-brand alias.night.tertiary-color.yellow.Mango': { alias: 'rgb(250, 188, 60)' },
  'sys-brand alias.unsure??': { alias: 'rgb(0, 255, 255)' },
  'sys-ramps.ramp-system.black': { value: 'rgb(0, 0, 0)' },
  'sys-ramps.ramp-system.Green': { value: 'rgb(34, 132, 113)' },
  'sys-ramps.ramp-system.Lemon': { value: 'rgb(255, 203, 70)' },
  'sys-ramps.ramp-system.Mango': { value: 'rgb(250, 188, 60)' },
  'sys-ramps.ramp-system.Pomegranate': { value: 'rgb(167, 58, 72)' },
  'sys-ramps.ramp-system.white': { value: 'rgb(255, 255, 255)' },
  'aMode.elevation.blur.blur-10': { day: '10px', night: '10px' },
  'aMode.elevation.blur.blur-14': { day: '14px', night: '14px' },
  'aMode.elevation.blur.blur-2': { day: '2px', night: '2px' },
  'aMode.elevation.blur.blur-25': { day: '25px', night: '25px' },
  'aMode.elevation.blur.blur-44': { day: '44px', night: '44px' },
  'aMode.elevation.blur.blur-76': { day: '76px', night: '76px' },
  'aMode.elevation.spread.s-0': { day: '0px', night: '0px' },
  'aMode.elevation.spread.s-minus-18': { day: '-18px', night: '-18px' },
  'aMode.elevation.spread.s-minus-2': { day: '-2px', night: '-2px' },
  'aMode.elevation.spread.s-minus-32': { day: '-32px', night: '-32px' },
  'aMode.elevation.spread.s-minus-5': { day: '-5px', night: '-5px' },
  'aMode.elevation.x.x': { day: '0px', night: '0px' },
  'aMode.elevation.y.y-0': { day: '0px', night: '0px' },
  'aMode.elevation.y.y-10': { day: '10px', night: '10px' },
  'aMode.elevation.y.y-18': { day: '18px', night: '18px' },
  'aMode.elevation.y.y-2': { day: '2px', night: '2px' },
  'aMode.elevation.y.y-5': { day: '5px', night: '5px' },
  'aMode.elevation.y.y-65': { day: '65px', night: '65px' },
  'com-font-size.3': { 'catchUp (3)': '9px', 'ketchup (default (4))': '12px' },
  'com-font-size.4': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'com-font-size.5': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'com-font-size.6': { 'catchUp (3)': '18px', 'ketchup (default (4))': '24px' },
  'com-font-size.8': { 'catchUp (3)': '24px', 'ketchup (default (4))': '32px' },
  'com-font-size.10': { 'catchUp (3)': '30px', 'ketchup (default (4))': '40px' },
  'com-font-size.12': { 'catchUp (3)': '36px', 'ketchup (default (4))': '48px' },
  'com-font-size.14': { 'catchUp (3)': '42px', 'ketchup (default (4))': '56px' },
  'com-font-size.18': { 'catchUp (3)': '54px', 'ketchup (default (4))': '72px' },
  'com-font-size.24': { 'catchUp (3)': '72px', 'ketchup (default (4))': '96px' },
  'com-font-size.16_5': { 'catchUp (3)': '49.5px', 'ketchup (default (4))': '66px' },
  'com-font-size.3_5': { 'catchUp (3)': '10.5px', 'ketchup (default (4))': '14px' },
  'com-font-weight.bold': { 'Mode 1': '700px' },
  'com-font-weight.display': { 'Mode 1': '900px' },
  'com-font-weight.medium': { 'Mode 1': '500px' },
  'com-font-weight.regular': { 'Mode 1': '400px' },
  'density.sys.sys-8px': { 'catchUp (3)': '8px', 'ketchup (default (4))': '8px' },
  'density.border (b-).b-l': { 'catchUp (3)': '8px', 'ketchup (default (4))': '8px' },
  'density.sys.sys-4px': { 'catchUp (3)': '4px', 'ketchup (default (4))': '4px' },
  'density.border (b-).b-m': { 'catchUp (3)': '4px', 'ketchup (default (4))': '4px' },
  'density.sys.sys-0px': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.border (b-).b-none': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.sys.sys-2•5px': { 'catchUp (3)': '2.5px', 'ketchup (default (4))': '2.5px' },
  'density.border (b-).b-s': { 'catchUp (3)': '2.5px', 'ketchup (default (4))': '2.5px' },
  'density.sys.sys-12px': { 'catchUp (3)': '12px', 'ketchup (default (4))': '12px' },
  'density.border (b-).b-xl': { 'catchUp (3)': '12px', 'ketchup (default (4))': '12px' },
  'density.sys.sys-1•5px': { 'catchUp (3)': '1.5px', 'ketchup (default (4))': '1.5px' },
  'density.border (b-).b-xs': { 'catchUp (3)': '1.5px', 'ketchup (default (4))': '1.5px' },
  'density.sys.sys-0': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.gap (g-).g-0': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.gap (g-).g-0px': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.gap (g-).g-12px': { 'catchUp (3)': '12px', 'ketchup (default (4))': '12px' },
  'density.sys.sys-2px': { 'catchUp (3)': '2px', 'ketchup (default (4))': '2px' },
  'density.gap (g-).g-2px': { 'catchUp (3)': '2px', 'ketchup (default (4))': '2px' },
  'density.sys.sys-8': { 'catchUp (3)': '24px', 'ketchup (default (4))': '32px' },
  'density.gap (g-).g-2xl': { 'catchUp (3)': '24px', 'ketchup (default (4))': '32px' },
  'density.sys.sys-1': { 'catchUp (3)': '3px', 'ketchup (default (4))': '4px' },
  'density.gap (g-).g-2xs': { 'catchUp (3)': '3px', 'ketchup (default (4))': '4px' },
  'density.sys.sys-10': { 'catchUp (3)': '30px', 'ketchup (default (4))': '40px' },
  'density.gap (g-).g-3xl': { 'catchUp (3)': '30px', 'ketchup (default (4))': '40px' },
  'density.sys.sys-0•5': { 'catchUp (3)': '1.5px', 'ketchup (default (4))': '2px' },
  'density.gap (g-).g-3xs': { 'catchUp (3)': '1.5px', 'ketchup (default (4))': '2px' },
  'density.gap (g-).g-4px': { 'catchUp (3)': '4px', 'ketchup (default (4))': '4px' },
  'density.sys.sys-12': { 'catchUp (3)': '36px', 'ketchup (default (4))': '48px' },
  'density.gap (g-).g-4xl': { 'catchUp (3)': '36px', 'ketchup (default (4))': '48px' },
  'density.sys.sys-18': { 'catchUp (3)': '54px', 'ketchup (default (4))': '72px' },
  'density.gap (g-).g-5xl': { 'catchUp (3)': '54px', 'ketchup (default (4))': '72px' },
  'density.sys.sys-24': { 'catchUp (3)': '72px', 'ketchup (default (4))': '96px' },
  'density.gap (g-).g-6xl': { 'catchUp (3)': '72px', 'ketchup (default (4))': '96px' },
  'density.gap (g-).g-8px': { 'catchUp (3)': '8px', 'ketchup (default (4))': '8px' },
  'density.sys.sys-5px': { 'catchUp (3)': '5px', 'ketchup (default (4))': '5px' },
  'density.gap (g-).g-focus-ring': { 'catchUp (3)': '5px', 'ketchup (default (4))': '5px' },
  'density.sys.sys-5': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'density.gap (g-).g-l': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'density.sys.sys-4': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.gap (g-).g-m': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.sys.sys-3': { 'catchUp (3)': '9px', 'ketchup (default (4))': '12px' },
  'density.gap (g-).g-s': { 'catchUp (3)': '9px', 'ketchup (default (4))': '12px' },
  'density.sys.sys-6': { 'catchUp (3)': '18px', 'ketchup (default (4))': '24px' },
  'density.gap (g-).g-xl': { 'catchUp (3)': '18px', 'ketchup (default (4))': '24px' },
  'density.sys.sys-2': { 'catchUp (3)': '6px', 'ketchup (default (4))': '8px' },
  'density.gap (g-).g-xs': { 'catchUp (3)': '6px', 'ketchup (default (4))': '8px' },
  'density.padding (p-).p-0': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.padding (p-).p-0px': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.padding (p-).p-12px': { 'catchUp (3)': '12px', 'ketchup (default (4))': '12px' },
  'density.padding (p-).p-2px': { 'catchUp (3)': '2px', 'ketchup (default (4))': '2px' },
  'density.padding (p-).p-2xl': { 'catchUp (3)': '24px', 'ketchup (default (4))': '32px' },
  'density.padding (p-).p-2xs': { 'catchUp (3)': '3px', 'ketchup (default (4))': '4px' },
  'density.padding (p-).p-3xl': { 'catchUp (3)': '30px', 'ketchup (default (4))': '40px' },
  'density.padding (p-).p-3xs': { 'catchUp (3)': '1.5px', 'ketchup (default (4))': '2px' },
  'density.padding (p-).p-4px': { 'catchUp (3)': '4px', 'ketchup (default (4))': '4px' },
  'density.padding (p-).p-4xl': { 'catchUp (3)': '36px', 'ketchup (default (4))': '48px' },
  'density.padding (p-).p-5xl': { 'catchUp (3)': '54px', 'ketchup (default (4))': '72px' },
  'density.padding (p-).p-6xl': { 'catchUp (3)': '72px', 'ketchup (default (4))': '96px' },
  'density.padding (p-).p-8px': { 'catchUp (3)': '8px', 'ketchup (default (4))': '8px' },
  'density.padding (p-).p-l': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'density.padding (p-).p-m': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.padding (p-).p-s': { 'catchUp (3)': '9px', 'ketchup (default (4))': '12px' },
  'density.padding (p-).p-xl': { 'catchUp (3)': '18px', 'ketchup (default (4))': '24px' },
  'density.padding (p-).p-xs': { 'catchUp (3)': '6px', 'ketchup (default (4))': '8px' },
  'density.pane (v-).gutter (g-).v-g-2xl': { 'catchUp (3)': '18px', 'ketchup (default (4))': '24px' },
  'density.pane (v-).gutter (g-).v-g-compact': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.pane (v-).gutter (g-).v-g-expanded': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.pane (v-).gutter (g-).v-g-extra-large': { 'catchUp (3)': '18px', 'ketchup (default (4))': '24px' },
  'density.pane (v-).gutter (g-).v-g-large': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'density.pane (v-).gutter (g-).v-g-medium': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.pane (v-).gutter (g-).v-g-tiny': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.pane (v-).height (h-).v-h-2xl': { 'catchUp (3)': '1440px', 'ketchup (default (4))': '1440px' },
  'density.pane (v-).height (h-).v-h-compact': { 'catchUp (3)': '667px', 'ketchup (default (4))': '667px' },
  'density.pane (v-).height (h-).v-h-expanded': { 'catchUp (3)': '720px', 'ketchup (default (4))': '720px' },
  'density.pane (v-).height (h-).v-h-extra-large': { 'catchUp (3)': '1080px', 'ketchup (default (4))': '1080px' },
  'density.pane (v-).height (h-).v-h-large': { 'catchUp (3)': '864px', 'ketchup (default (4))': '864px' },
  'density.pane (v-).height (h-).v-h-medium': { 'catchUp (3)': '896px', 'ketchup (default (4))': '896px' },
  'density.pane (v-).height (h-).v-h-tiny': { 'catchUp (3)': '736px', 'ketchup (default (4))': '736px' },
  'density.pane (v-).margin (m-).v-m-2xl': { 'catchUp (3)': '30px', 'ketchup (default (4))': '40px' },
  'density.pane (v-).margin (m-).v-m-compact': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.pane (v-).margin (m-).v-m-expanded': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'density.pane (v-).margin (m-).v-m-extra-large': { 'catchUp (3)': '24px', 'ketchup (default (4))': '32px' },
  'density.pane (v-).margin (m-).v-m-large': { 'catchUp (3)': '15px', 'ketchup (default (4))': '20px' },
  'density.pane (v-).margin (m-).v-m-medium': { 'catchUp (3)': '12px', 'ketchup (default (4))': '16px' },
  'density.pane (v-).margin (m-).v-m-tiny': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.pane (v-).width (w-).v-w-2xl': { 'catchUp (3)': '3840px', 'ketchup (default (4))': '3840px' },
  'density.pane (v-).width (w-).v-w-compact': { 'catchUp (3)': '480px', 'ketchup (default (4))': '480px' },
  'density.pane (v-).width (w-).v-w-expanded': { 'catchUp (3)': '1536px', 'ketchup (default (4))': '1536px' },
  'density.pane (v-).width (w-).v-w-extra-large': { 'catchUp (3)': '2560px', 'ketchup (default (4))': '2560px' },
  'density.pane (v-).width (w-).v-w-large': { 'catchUp (3)': '1920px', 'ketchup (default (4))': '1920px' },
  'density.pane (v-).width (w-).v-w-medium': { 'catchUp (3)': '1280px', 'ketchup (default (4))': '1280px' },
  'density.pane (v-).width (w-).v-w-tiny': { 'catchUp (3)': '265px', 'ketchup (default (4))': '265px' },
  'density.sys.sys-999px': { 'catchUp (3)': '999px', 'ketchup (default (4))': '999px' },
  'density.radius (r-).r-circle': { 'catchUp (3)': '999px', 'ketchup (default (4))': '999px' },
  'density.sys.sys-32px': { 'catchUp (3)': '32px', 'ketchup (default (4))': '32px' },
  'density.radius (r-).r-l': { 'catchUp (3)': '32px', 'ketchup (default (4))': '32px' },
  'density.sys.sys-24px': { 'catchUp (3)': '24px', 'ketchup (default (4))': '24px' },
  'density.radius (r-).r-m': { 'catchUp (3)': '24px', 'ketchup (default (4))': '24px' },
  'density.radius (r-).r-none': { 'catchUp (3)': '0px', 'ketchup (default (4))': '0px' },
  'density.sys.sys-16px': { 'catchUp (3)': '16px', 'ketchup (default (4))': '16px' },
  'density.radius (r-).r-s': { 'catchUp (3)': '16px', 'ketchup (default (4))': '16px' },
  'density.sys.sys-48px': { 'catchUp (3)': '48px', 'ketchup (default (4))': '48px' },
  'density.radius (r-).r-xl': { 'catchUp (3)': '48px', 'ketchup (default (4))': '48px' },
  'density.radius (r-).r-xs': { 'catchUp (3)': '8px', 'ketchup (default (4))': '8px' },
  'density.sys.sys-1px': { 'catchUp (3)': '1px', 'ketchup (default (4))': '1px' },
  'Effect styles.elevation/elevation-01': { default: '0px 2px 2px 0px rgba(0, 0, 0, 0.04)' },
  'Effect styles.elevation/elevation-02': {
    default: '0px 5px 10px -5px rgba(0, 0, 0, 0.04), 0px 10px 25px -5px rgba(0, 0, 0, 0.1), 0px 0px 14px 0px rgba(0, 0, 0, 0.03)'
  },
  'Effect styles.elevation/elevation-03': {
    default: '0px 65px 76px -32px rgba(0, 0, 0, 0.1), 0px 18px 44px -18px rgba(0, 0, 0, 0.13)'
  },
  'Effect styles.Local/Design System ONLY': {
    default: '13px 4px 31px 0px rgba(0, 0, 0, 0.1), 54px 17px 56px 0px rgba(0, 0, 0, 0.09), 121px 38px 76px 0px rgba(0, 0, 0, 0.05), 215px 68px 90px 0px rgba(0, 0, 0, 0.01), 335px 106px 98px 0px rgba(0, 0, 0, 0)'
  },
  'Text styles._EightShapes Spec/Annotations/Marker': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '14px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Annotations/Marker small': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Annotations/Space size': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Heading/Section': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '48px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Heading/Subsection': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '36px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Heading/SubsectionMetadata': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '16px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Heading/Title': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '64px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Table/Column header': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Attribute property': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Attribute value': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Dependency value': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Element': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '16px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Element type': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '16px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Label': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '24px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Label metadata': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '18px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Style value': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Token value': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Variable collection value': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles._EightShapes Spec/Text/Variable value': {
    default: {
      fontFamily: 'Inter',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Actions/Button-l': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '20px',
      textIndent: '0px',
      lineHeight: '120.00000476837158px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Actions/Button-m': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '16px',
      textIndent: '0px',
      lineHeight: '120.00000476837158px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Actions/Button-s': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '14px',
      textIndent: '0px',
      lineHeight: '120.00000476837158px',
      letterSpacing: '2%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Controls/Caption': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Controls/Caption-strong': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'bold',
      fontSize: '12px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Controls/Global-menu': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '12px',
      textIndent: '0px',
      lineHeight: '120.00000476837158px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-l/compact': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '40px',
      textIndent: '0px',
      lineHeight: '110.00000238418579px',
      letterSpacing: '-0.5%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-l/large+': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '96px',
      textIndent: '0px',
      lineHeight: '100px',
      letterSpacing: '-0.5%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-l/medium & expanded': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '72px',
      textIndent: '0px',
      lineHeight: '48px',
      letterSpacing: '-0.5%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-m/compact': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '32px',
      textIndent: '0px',
      lineHeight: '110.00000238418579px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-m/large+': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '72px',
      textIndent: '0px',
      lineHeight: '100px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-m/medium & expanded': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '56px',
      textIndent: '0px',
      lineHeight: '40px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-s/compact': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '24px',
      textIndent: '0px',
      lineHeight: '110.00000238418579px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-s/large+': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '32px',
      textIndent: '0px',
      lineHeight: '28px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-s/medium & expanded': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '32px',
      textIndent: '0px',
      lineHeight: '28px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Headlines/Heading-xs/Heading-xs': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '20px',
      textIndent: '0px',
      lineHeight: '110.00000238418579px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-l': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '20px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-l-lead': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '20px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-l-underline': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '20px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'underline'
    }
  },
  'Text styles.Standard Text/Body-m': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '16px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-m-lead': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '16px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-m-underline': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '16px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'underline'
    }
  },
  'Text styles.Standard Text/Body-s': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '14px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-s-lead': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'medium',
      fontSize: '14px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'none'
    }
  },
  'Text styles.Standard Text/Body-s-underline': {
    default: {
      fontFamily: 'DOJO Roobert',
      fontStyle: 'normal',
      fontWeight: 'regular',
      fontSize: '14px',
      textIndent: '0px',
      lineHeight: '150px',
      letterSpacing: '0%',
      textTransform: 'none',
      textDecoration: 'underline'
    }
  }
}) as const;
type Tokens = typeof tokens;

/**
* Retrieve any token for a given mode.
* @template {AllPath} Path - A generic extending all the possible paths
* @template {Tokens[Path] extends Record<string, any>
    ? keyof Tokens[Path]
    : undefined} Mode - A generic representing all the valid modes for a given path
* @template {Tokens[Path] extends Record<string, any>
    ? Tokens[Path][Mode extends undefined ? never : Mode]
    : Tokens[Path]} Return - The return type
* @param {Path} path - The path to the token
* @param {Mode} mode - The mode of the token you want to retrieve
* @returns {Return} - The value of a token for a given mode
*/
export function getTokenByMode<
  Path extends keyof Tokens,
  Mode extends Tokens[Path] extends Record<string, any>
    ? keyof Tokens[Path]
    : undefined,
  Return extends Tokens[Path] extends Record<string, any>
    ? Tokens[Path][Mode extends undefined ? never : Mode]
    : Tokens[Path]>(path: Path, mode: Mode): Return {
  if (!tokens[path]) {
    throw new Error("Path: '" + path + "' doesn't exist. Here are all the valid paths:\n- " + Object.keys(tokens).join('\n- '))
  }

  if (typeof tokens[path] !== 'object') {
    return tokens[path] as Return;
  }

  if (!mode) throw new Error('Mode is undefined but it should be one of ' + Object.keys(tokens[path]).join(', ') + ' for path: ' + path);

  if (!tokens[path][mode]) {
    throw new Error("Invalid mode '" + mode.toString() + "' at path '" + path + "', here are all the valid modes:\n- " + Object.keys(tokens[path]).join('\n- '))
  }

  return tokens[path][mode] as Return;
}

/**
* Retrieve any token with its modes.
* @template {AllPath} Path - A generic extending all the possible paths
* @param {Path} path - The path to the token
* @returns {Tokens[Path]} - The value of a token with its modes
*/
export function getTokenWithModes<Path extends keyof Tokens>(path: Path): Tokens[Path] {
  if (!tokens[path]) {
    throw new Error("Path: '" + path + "' doesn't exist. Here are all the valid paths:\n- " + Object.keys(tokens).join('\n- '))
  }

  return tokens[path];
}

/**
* Retrieve all the tokens for a specific type (color, dimension, etc...).
* Note that the value will either be a string or an object if the token has modes
* @template {keyof PathsByType} Type - A generic extending all the possible types
* @template {Tokens[PathsByType[Type][number]]} Token - A generic representing a union of all the outputs
* @param {Type} type - The path to the token
* @returns {{ [Path in PathsByType[Type][number]]: Tokens[Path] }} - An array with all the values
*/
export function getTokensByType<Type extends keyof PathsByType>(type: Type) {
  if (!pathsByType[type]) {
    throw new Error('The type: \'' + type + '\' does not exist')
  }

  return pathsByType[type].reduce(
    (acc, path) => {
      // @ts-expect-error - Can't cast `path` to `Path`
      acc[path] = tokens[path];
      return acc;
    },
    {} as { [Path in PathsByType[Type][number]]: Tokens[Path] },
  );
}

/**
 * @typedef {T extends T ? keyof T : never} KeysOfUnion<T>
 * @template T
 */
type KeysOfUnion<T> = T extends T ? keyof T : never;

/**
 * @typedef {T[keyof T]} IndexSelf<T>
 * @template T
 */
type IndexSelf<T> = T[keyof T];

/**
 * @typedef {IndexSelf<{ [Path in keyof Tokens]: Tokens[Path] extends { [key in Mode]: any } ? Path : never; }>} ValidPathsFromMode<Mode>
 * @template {string} Mode
 */
export type ValidPathsFromMode<Mode extends string> = IndexSelf<{ [Path in keyof Tokens]: Tokens[Path] extends { [key in Mode]: any } ? Path : never; }>;

/**
 * @template {KeysOfUnion<Tokens[keyof Tokens]>} Mode
 * @param {Mode} mode - Any valid mode
 * @returns - A function that takes a token path which has the given mode
 */
export function withMode<Mode extends KeysOfUnion<Tokens[keyof Tokens]>>(mode: Mode) {
  /**
   * @template {ValidPathsFromMode<Mode>} Path
   * @template {Extract<keyof Tokens[Path], Mode>} ValidMode
   * @param {Path} path - A valid path for the given mode
   * @returns {Tokens[Path][ValidMode]}
   */
  return <Path extends ValidPathsFromMode<Mode>, ValidMode extends Extract<keyof Tokens[Path], Mode>>(
    path: Path
  ) => {
    if (!tokens[path]) {
      throw new Error("Invalid path: '" + path + "'")
    }

    if (!tokens[path][mode as unknown as ValidMode]) {
      throw new Error("Invalid mode: '" + mode + "' for path: '" + path + "'")
    }

    return tokens[path][mode as unknown as ValidMode];
  }
}


