import SwiftUI

class DesignTokens {
  class Color_ {
    static let sys_rampsSecondary_colorRamp_teal09 = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal09 = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let sys_rampsPrimary_colorRamp_core_brand02 = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let sys_brand_aliasNightPrimary_colorCore_brandActiveteal = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeBgActionPrimaryDefaultDay = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgActionPrimaryDefaultNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey03 = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorGreyGrey03 = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal10 = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal10 = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionPrimaryDisabledDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgActionPrimaryDisabledNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal10 = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal03 = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal03 = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBgActionPrimaryFocusDay = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionPrimaryFocusNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBgActionPrimaryHoverDay = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionPrimaryHoverNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal11 = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal11 = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal01 = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal01 = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeBgActionPrimaryPressedDay = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBgActionPrimaryPressedNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let sys_brand_aliasTransparent = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBgActionSecondaryDefaultDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBgActionSecondaryDefaultNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let sys_brand_aliasTodelete = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionSecondaryPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let sys_rampsPrimary_colorRamp_core_brand01 = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let sys_brand_aliasDayPrimary_colorCore_brandCalmwhite = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeBgActionTertiaryDefaultDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeBgActionTertiaryDefaultNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgActionTertiaryDisabledDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgActionTertiaryDisabledNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionTertiaryFocusDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgActionTertiaryFocusNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionTertiaryHoverDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgActionTertiaryHoverNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionTertiaryPressedDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgActionTertiaryPressedNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgActionX_ghostDefaultDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_ghostDefaultNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedDefaultDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedDefaultNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgActionX_mutedPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let sys_rampsTertiary_colorRamp_orange02 = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let sys_brand_aliasDaySystemBad = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let sys_rampsTertiary_colorRamp_orange01 = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let sys_brand_aliasNightSystemBad = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeBgBaseBadDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeBgBaseBadNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal03 = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal08 = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal08 = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeBgBaseDecorativeDay = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBgBaseDecorativeNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey02 = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorGreyGrey02 = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal11 = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBgBaseDefaultDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgBaseDefaultNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBgBaseEclipseDefault_eclipseDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgBaseEclipseDefault_eclipseNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgBaseEclipseGood_eclipseDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgBaseEclipseGood_eclipseNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgBaseEclipseHeader_eclipseDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgBaseEclipseHeader_eclipseNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBgBaseEmphasisDay = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBgBaseEmphasisNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal07 = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let sys_brand_aliasDaySystemGood = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBgBaseGoodDay = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBgBaseGoodNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal09 = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgBaseHeaderDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgBaseHeaderNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey01 = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey01 = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgBaseInverseSecondaryDay = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgBaseInverseSecondaryNight = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let sys_rampsRamp_systemOverlay_90_ = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.8999999761581421)
    static let sys_brand_aliasOverlay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.8999999761581421)
    static let amodeBgBaseOverlayDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.8999999761581421)
    static let amodeBgBaseOverlayNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.8999999761581421)
    static let sys_rampsRamp_systemOverlay_30_ = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.30000001192092896)
    static let sys_brand_aliasOverla_muted = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.30000001192092896)
    static let amodeBgBaseOverlay_mutedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.30000001192092896)
    static let amodeBgBaseOverlay_mutedNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 0.30000001192092896)
    static let sys_brand_aliasDaySecondary_colorGreyGrey01 = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgBaseSecondaryDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgBaseSecondaryNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let sys_rampsTertiary_colorRamp_yellow02 = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let sys_brand_aliasDaySystemWarn = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let sys_rampsTertiary_colorRamp_yellow01 = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let sys_brand_aliasNightSystemWarn = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let amodeBgBaseWarnDay = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let amodeBgBaseWarnNight = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let amodeBgControlBadDefaultDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgControlBadDefaultNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgControlDefaultDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgControlDefaultNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgControlDisabledDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlDisabledNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBgControlFocusDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgControlFocusNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBgControlHoverDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgControlHoverNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgControlPressedDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlPressedNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_counter_inverseDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_counter_inverseNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_disabled_oninvertDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_disabled_oninvertNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let sys_brand_aliasWhatshouldibe = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_focus_inverseDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_focus_inverseNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey07 = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorGreyGrey07 = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_hover_inverseDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_hover_inverseNight = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal07 = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal07 = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_inverseDay = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_inverseNight = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_pressed_inverseDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlSelectedInverseSelected_pressed_inverseNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeBgControlSelectedSelectedDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgControlSelectedSelectedNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgControlSelectedSelected_counterDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgControlSelectedSelected_counterNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgControlSelectedSelected_disabledDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlSelectedSelected_disabledNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBgControlSelectedSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgControlSelectedSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgControlSelectedSelected_hoverDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeBgControlSelectedSelected_hoverNight = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBgControlSelectedSelected_pressedDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlSelectedSelected_pressedNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeBgControlUnselectedUnselectedDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgControlUnselectedUnselectedNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBgControlUnselectedUnselected_counterDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeBgControlUnselectedUnselected_counterNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBgControlUnselectedUnselected_hoverDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBgControlUnselectedUnselected_hoverNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey04 = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorGreyGrey04 = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeBgControlUnselectedUnselected_pressedDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeBgControlUnselectedUnselected_pressedNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeBgNavDisabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavDisabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavFocusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavFocusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavHoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavHoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavPressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavPressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelectedDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeBgNavSelectedNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeBgNavSelected_counterDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_counterNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_pressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavSelected_pressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavUnselectedDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBgNavUnselectedNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBgNavUnselected_counterDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavUnselected_counterNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavUnselected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavUnselected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavUnselected_pressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBgNavUnselected_pressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedDefaultDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedDefaultNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionMutedPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionPrimaryDefaultDay = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBorderActionPrimaryDefaultNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeBorderActionPrimaryDefault_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionPrimaryDefault_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionPrimaryDisabledDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderActionPrimaryDisabledNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionPrimaryFocusDay = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionPrimaryFocusNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBorderActionPrimaryHoverDay = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionPrimaryHoverNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBorderActionPrimaryPressedDay = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeBorderActionPrimaryPressedNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeBorderActionSecondaryDefaultDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBorderActionSecondaryDefaultNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBorderActionSecondaryDefault_oldDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryDefault_oldNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryInverseFocus_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryInverseFocus_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryInverseHover_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryInverseHover_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionSecondaryPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeBorderActionTertiaryDefault_oninvertDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeBorderActionTertiaryDefault_oninvertNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionTertiaryDisabledDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderActionTertiaryDisabledNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionTertiaryFocusDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderActionTertiaryFocusNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionTertiaryHoverDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderActionTertiaryHoverNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderActionTertiaryPressedDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderActionTertiaryPressedNight = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeBorderBaseContrastDay = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBorderBaseContrastNight = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let sys_rampsPrimary_colorRamp_core_brand03 = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let sys_brand_aliasNightPrimary_colorCore_brandConfidentblack = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderBaseDefaultDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeBorderBaseDefaultNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderBaseDividerDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderBaseDividerNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let sys_brand_aliasDayPrimary_colorCore_brandActiveteal = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeBorderBaseEmphasisDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeBorderBaseEmphasisNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBorderBaseSecondaryDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderBaseSecondaryNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderControlBadDefaultDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeBorderControlBadDefaultNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeBorderControlDecorativeDefaultDay = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeBorderControlDecorativeDefaultNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey05 = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorGreyGrey05 = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeBorderControlDefaultDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeBorderControlDefaultNight = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBorderControlDisabledDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderControlDisabledNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let sys_brand_aliasDayPrimary_colorCore_brandConfidentblack = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderControlFocusDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderControlFocusNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBorderControlHoverDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderControlHoverNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeBorderControlPressedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderControlPressedNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBorderControlSelectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderControlSelectedNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeBorderControlSelected_disabledDay = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let amodeBorderControlSelected_disabledNight = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeBorderControlSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderControlSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderControlSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderControlSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderControlUnselectedDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeBorderControlUnselectedNight = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeBorderFocus_ringDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderFocus_ringNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal01 = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeBorderFocus_ring_oninvertDay = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeBorderFocus_ring_oninvertNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeBorderNavDisabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavDisabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavFocusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavFocusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavHoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavHoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavPressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavPressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelectedDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeBorderNavSelectedNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeBorderNavSelected_counterDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_counterNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_pressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavSelected_pressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavUnselectedDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBorderNavUnselectedNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 0)
    static let amodeBorderNavUnselected_counterDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavUnselected_counterNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavUnselected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavUnselected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavUnselected_pressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeBorderNavUnselected_pressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let sys_rampsTertiary_colorRamp_blue01 = Color(red: 0.35294, green: 0.81569, blue: 1.0, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorBlueBuzzyblue = Color(red: 0.35294, green: 0.81569, blue: 1.0, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorBlueBuzzyblue = Color(red: 0.35294, green: 0.81569, blue: 1.0, opacity: 1)
    static let amodeDojo_patternsBlueBuzzyblueDay = Color(red: 0.35294, green: 0.81569, blue: 1.0, opacity: 1)
    static let amodeDojo_patternsBlueBuzzyblueNight = Color(red: 0.35294, green: 0.81569, blue: 1.0, opacity: 1)
    static let sys_rampsTertiary_colorRamp_blue03 = Color(red: 0.01961, green: 0.12549, blue: 0.42745, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorBlueElectricnavy = Color(red: 0.01961, green: 0.12549, blue: 0.42745, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorBlueElectricnavy = Color(red: 0.01961, green: 0.12549, blue: 0.42745, opacity: 1)
    static let amodeDojo_patternsBlueElectricnavyDay = Color(red: 0.01961, green: 0.12549, blue: 0.42745, opacity: 1)
    static let amodeDojo_patternsBlueElectricnavyNight = Color(red: 0.01961, green: 0.12549, blue: 0.42745, opacity: 1)
    static let sys_rampsTertiary_colorRamp_blue02 = Color(red: 0.18824, green: 0.47059, blue: 0.71373, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorBlueSteelblue = Color(red: 0.18824, green: 0.47059, blue: 0.71373, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorBlueSteelblue = Color(red: 0.18824, green: 0.47059, blue: 0.71373, opacity: 1)
    static let amodeDojo_patternsBlueSteelblueDay = Color(red: 0.18824, green: 0.47059, blue: 0.71373, opacity: 1)
    static let amodeDojo_patternsBlueSteelblueNight = Color(red: 0.18824, green: 0.47059, blue: 0.71373, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorOrangeBouncyorange = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorOrangeBouncyorange = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeDojo_patternsOrangeBouncyorangeDay = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeDojo_patternsOrangeBouncyorangeNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorOrangePomegranate = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorOrangePomegranate = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeDojo_patternsOrangePomegranateDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeDojo_patternsOrangePomegranateNight = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let sys_rampsTertiary_colorRamp_orange03 = Color(red: 0.40000, green: 0.02353, blue: 0.23137, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorOrangePunchyplum = Color(red: 0.40000, green: 0.02353, blue: 0.23137, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorOrangePlum = Color(red: 0.40000, green: 0.02353, blue: 0.23137, opacity: 1)
    static let amodeDojo_patternsOrangePunchyplumDay = Color(red: 0.40000, green: 0.02353, blue: 0.23137, opacity: 1)
    static let amodeDojo_patternsOrangePunchyplumNight = Color(red: 0.40000, green: 0.02353, blue: 0.23137, opacity: 1)
    static let sys_rampsTertiary_colorRamp_purple02 = Color(red: 0.47843, green: 0.31765, blue: 0.75686, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorPurpleIris = Color(red: 0.47843, green: 0.31765, blue: 0.75686, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorPurpleIris = Color(red: 0.47843, green: 0.31765, blue: 0.75686, opacity: 1)
    static let amodeDojo_patternsPurpleIrisDay = Color(red: 0.47843, green: 0.31765, blue: 0.75686, opacity: 1)
    static let amodeDojo_patternsPurpleIrisNight = Color(red: 0.47843, green: 0.31765, blue: 0.75686, opacity: 1)
    static let sys_rampsTertiary_colorRamp_purple01 = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorPurpleLilac = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorPurpleLivelylilac = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let amodeDojo_patternsPurpleLivelylilacDay = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let amodeDojo_patternsPurpleLivelylilacNight = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let sys_rampsTertiary_colorRamp_purple03 = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorPurpleVibrantviolet = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorPurpleVibrantviolet = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let amodeDojo_patternsPurpleVibrantvioletDay = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let amodeDojo_patternsPurpleVibrantvioletNight = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let amodeDojo_patternsTealTeal07Day = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeDojo_patternsTealTeal07Night = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal08 = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeDojo_patternsTealTeal08Day = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeDojo_patternsTealTeal08Night = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeDojo_patternsTealTeal09Day = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeDojo_patternsTealTeal09Night = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeElevationShadowShadow_10_Day = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.10000000149011612)
    static let amodeElevationShadowShadow_10_Night = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.10000000149011612)
    static let amodeElevationShadowShadow_13_Day = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.12999999523162842)
    static let amodeElevationShadowShadow_13_Night = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.12999999523162842)
    static let amodeElevationShadowShadow_3_Day = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.029999999329447746)
    static let amodeElevationShadowShadow_3_Night = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.029999999329447746)
    static let amodeElevationShadowShadow_4_Day = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.03999999910593033)
    static let amodeElevationShadowShadow_4_Night = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.03999999910593033)
    static let amodeIconActionGhostDefaultDay = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconActionGhostDefaultNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionGhostDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionGhostDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionGhostFocusDay = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconActionGhostFocusNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionGhostHoverDay = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconActionGhostHoverNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionGhostPressedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconActionGhostPressedNight = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeIconActionGhostVisitedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionGhostVisitedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedDefaultDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedDefaultNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedVisitedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionMutedVisitedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionPrimaryDefaultDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionPrimaryDefaultNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let sys_brand_aliasNightPrimary_colorCore_brandCalmwhite = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeIconActionPrimaryDefault_oninvertDay = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeIconActionPrimaryDefault_oninvertNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeIconActionPrimaryDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeIconActionPrimaryDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconActionPrimaryFocusDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionPrimaryFocusNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeIconActionPrimaryHoverDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionPrimaryHoverNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeIconActionPrimaryPressedDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionPrimaryPressedNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeIconActionPrimaryVisitedDay = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let amodeIconActionPrimaryVisitedNight = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let amodeIconActionSecondaryDefaultDay = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeIconActionSecondaryDefaultNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconActionSecondaryDefault_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryDefault_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryVisitedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconActionSecondaryVisitedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconBaseBadDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeIconBaseBadNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeIconBaseBrandDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconBaseBrandNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal06 = Color(red: 0.16863, green: 0.65098, blue: 0.55294, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal06 = Color(red: 0.16863, green: 0.65098, blue: 0.55294, opacity: 1)
    static let amodeIconBaseDecorativeDay = Color(red: 0.16863, green: 0.65098, blue: 0.55294, opacity: 1)
    static let amodeIconBaseDecorativeNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal05 = Color(red: 0.44314, green: 0.76471, blue: 0.70196, opacity: 1)
    static let sys_brand_aliasNightSystemGood = Color(red: 0.44314, green: 0.76471, blue: 0.70196, opacity: 1)
    static let amodeIconBaseGoodDay = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeIconBaseGoodNight = Color(red: 0.44314, green: 0.76471, blue: 0.70196, opacity: 1)
    static let amodeIconBaseGood_oninvertDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconBaseGood_oninvertNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeIconBasePrimaryDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconBasePrimaryNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeIconBasePrimary_oninvertDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeIconBasePrimary_oninvertNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal04 = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal04 = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeIconBaseSecondaryDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeIconBaseSecondaryNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeIconBaseWarnDay = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let amodeIconBaseWarnNight = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let amodeIconControlBadDefaultDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeIconControlBadDefaultNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeIconControlDecorativeDefaultDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlDecorativeDefaultNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlDefaultDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconControlDefaultNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeIconControlDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeIconControlDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconControlFocusDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconControlFocusNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeIconControlHoverDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconControlHoverNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeIconControlLabelDefaultDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeIconControlLabelDefaultNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeIconControlLabelDisabledDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeIconControlLabelDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let sys_rampsSecondary_colorRamp_grey06 = Color(red: 0.48627, green: 0.45882, blue: 0.43137, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorGreyGrey06 = Color(red: 0.48627, green: 0.45882, blue: 0.43137, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal06 = Color(red: 0.16863, green: 0.65098, blue: 0.55294, opacity: 1)
    static let amodeIconControlPlaceholderDefaultDay = Color(red: 0.48627, green: 0.45882, blue: 0.43137, opacity: 1)
    static let amodeIconControlPlaceholderDefaultNight = Color(red: 0.16863, green: 0.65098, blue: 0.55294, opacity: 1)
    static let amodeIconControlPlaceholderDisabledDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeIconControlPlaceholderDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconControlPressedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconControlPressedNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeIconControlSecondaryDefaultDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSecondaryDefaultNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSelectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconControlSelectedNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeIconControlSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconControlUnselectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconControlUnselectedNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeIconMealvoucher__sodexo_bottomDay = Color(red: 0.92941, green: 0.10980, blue: 0.14118, opacity: 1)
    static let amodeIconMealvoucher__sodexo_bottomNight = Color(red: 0.92941, green: 0.10980, blue: 0.14118, opacity: 1)
    static let amodeIconMealvoucher__sodexo_topDay = Color(red: 0.16863, green: 0.21569, blue: 0.59216, opacity: 1)
    static let amodeIconMealvoucher__sodexo_topNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconMealvoucher__swileDay = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconMealvoucher__swileNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconMealvoucher__upday_backgroundDay = Color(red: 0.11373, green: 0.72157, blue: 0.85490, opacity: 1)
    static let amodeIconMealvoucher__upday_backgroundNight = Color(red: 0.11373, green: 0.72157, blue: 0.85490, opacity: 1)
    static let amodeIconMealvoucher__upday_foregroundDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconMealvoucher__upday_foregroundNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconMealvoucherBg__edenredDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconMealvoucherBg__edenredNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeIconMealvoucherBg__sodexoDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconMealvoucherBg__sodexoNight = Color(red: 0.16863, green: 0.21569, blue: 0.59216, opacity: 1)
    static let amodeIconMealvoucherBg__swileDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconMealvoucherBg__swileNight = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeIconMealvoucherBg__updayDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconMealvoucherBg__updayNight = Color(red: 0.11373, green: 0.72157, blue: 0.85490, opacity: 1)
    static let amodeIconNavDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeIconNavDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconNavFocusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavFocusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavHoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavHoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeIconNavInverseDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeIconNavInverseFocusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseFocusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseHoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseHoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInversePressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInversePressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseSelectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconNavInverseSelectedNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconNavInverseSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavInverseUnselectedDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeIconNavInverseUnselectedNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeIconNavPressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavPressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavSelectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconNavSelectedNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeIconNavSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeIconNavUnselectedDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconNavUnselectedNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeIconPaymentlogos__amex_backgroundDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconPaymentlogos__amex_backgroundNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconPaymentlogos__amex_foregroundDay = Color(red: 0.0, green: 0.44314, blue: 0.80784, opacity: 1)
    static let amodeIconPaymentlogos__amex_foregroundNight = Color(red: 0.0, green: 0.44314, blue: 0.80784, opacity: 1)
    static let amodeIconPaymentlogos__dinersint_backgroundDay = Color(red: 0.0, green: 0.47451, blue: 0.74510, opacity: 1)
    static let amodeIconPaymentlogos__dinersint_backgroundNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconPaymentlogos__dinersint_foregroundDay = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconPaymentlogos__dinersint_foregroundNight = Color(red: 0.0, green: 0.47451, blue: 0.74510, opacity: 1)
    static let amodeIconPaymentlogos__discoverDay = Color(red: 0.88235, green: 0.45882, blue: 0.17647, opacity: 1)
    static let amodeIconPaymentlogos__discoverNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconPaymentlogos__mastercard_endDay = Color(red: 0.96863, green: 0.61961, blue: 0.10588, opacity: 1)
    static let amodeIconPaymentlogos__mastercard_endNight = Color(red: 0.96863, green: 0.61961, blue: 0.10588, opacity: 1)
    static let amodeIconPaymentlogos__mastercard_middleDay = Color(red: 1.0, green: 0.37255, blue: 0.0, opacity: 1)
    static let amodeIconPaymentlogos__mastercard_middleNight = Color(red: 1.0, green: 0.37255, blue: 0.0, opacity: 1)
    static let amodeIconPaymentlogos__mastercard_startDay = Color(red: 0.92157, green: 0.0, blue: 0.10588, opacity: 1)
    static let amodeIconPaymentlogos__mastercard_startNight = Color(red: 0.92157, green: 0.0, blue: 0.10588, opacity: 1)
    static let amodeIconPaymentlogos__visaDay = Color(red: 0.01961, green: 0.20784, blue: 0.83137, opacity: 1)
    static let amodeIconPaymentlogos__visaNight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let amodeIconPaymentlogosBg__amexDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconPaymentlogosBg__amexNight = Color(red: 0.0, green: 0.44314, blue: 0.80784, opacity: 1)
    static let amodeIconPaymentlogosBg__dinersintDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconPaymentlogosBg__dinersintNight = Color(red: 0.0, green: 0.47451, blue: 0.74510, opacity: 1)
    static let amodeIconPaymentlogosBg__discoverDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconPaymentlogosBg__discoverNight = Color(red: 0.88235, green: 0.45882, blue: 0.17647, opacity: 1)
    static let amodeIconPaymentlogosBg__mastercardDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconPaymentlogosBg__mastercardNight = Color(red: 0.14902, green: 0.14902, blue: 0.14902, opacity: 1)
    static let amodeIconPaymentlogosBg__visaDay = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let amodeIconPaymentlogosBg__visaNight = Color(red: 0.01961, green: 0.20784, blue: 0.83137, opacity: 1)
    static let amodeTextActionGhostDefaultDay = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextActionGhostDefaultNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionGhostDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionGhostDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionGhostFocusDay = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextActionGhostFocusNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionGhostHoverDay = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextActionGhostHoverNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionGhostPressedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextActionGhostPressedNight = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let amodeTextActionGhostVisitedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionGhostVisitedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedDefaultDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedDefaultNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedVisitedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionMutedVisitedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionPrimaryDefaultDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionPrimaryDefaultNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeTextActionPrimaryDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeTextActionPrimaryDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextActionPrimaryFocusDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionPrimaryFocusNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeTextActionPrimaryHoverDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionPrimaryHoverNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeTextActionPrimaryPressedDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionPrimaryPressedNight = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeTextActionPrimaryVisitedDay = Color(red: 0.26667, green: 0.09020, blue: 0.51373, opacity: 1)
    static let amodeTextActionPrimaryVisitedNight = Color(red: 0.68627, green: 0.54510, blue: 1.0, opacity: 1)
    static let amodeTextActionSecondaryDefaultDay = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeTextActionSecondaryDefaultNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionSecondaryDisabledDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryDisabledNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryFocusDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryFocusNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryHoverDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryHoverNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryInverseDefault_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryInverseDefault_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryInverseFoucs_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryInverseFoucs_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryInverseHover_oninvertDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryInverseHover_oninvertNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryPressedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryPressedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryVisitedDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionSecondaryVisitedNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextActionTertiaryDefault_oninvertDay = Color(red: 0.0, green: 0.24706, blue: 0.20000, opacity: 1)
    static let amodeTextActionTertiaryDefault_oninvertNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextActionTertiaryFocus_oninvertDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextActionTertiaryFocus_oninvertNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextActionTertiaryHover_oninvertDay = Color(red: 0.0, green: 0.17647, blue: 0.14118, opacity: 1)
    static let amodeTextActionTertiaryHover_oninvertNight = Color(red: 0.64314, green: 0.95686, blue: 0.89804, opacity: 1)
    static let amodeTextActionTertiaryPressed_oninvertDay = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let amodeTextActionTertiaryPressed_oninvertNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeTextBaseBadDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeTextBaseBadNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeTextBaseBrandDay = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextBaseBrandNight = Color(red: 0.23529, green: 0.91765, blue: 0.78039, opacity: 1)
    static let amodeTextBaseDecorativeDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextBaseDecorativeNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextBaseGoodDay = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let amodeTextBaseGoodNight = Color(red: 0.44314, green: 0.76471, blue: 0.70196, opacity: 1)
    static let amodeTextBaseHeader_emphasisDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextBaseHeader_emphasisNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextBaseInverseGood_inverseDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextBaseInverseGood_inverseNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextBaseInversePrimary_inverseDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextBaseInversePrimary_inverseNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextBaseInverseSecondaryDay = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextBaseInverseSecondaryNight = Color(red: 1.0, green: 0.0, blue: 0.0, opacity: 1)
    static let amodeTextBasePrimaryDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextBasePrimaryNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextBaseSecondaryDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeTextBaseSecondaryNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeTextBaseWarnDay = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let amodeTextBaseWarnNight = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let amodeTextControlBadDefaultDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeTextControlBadDefaultNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeTextControlDefaultDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextControlDefaultNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeTextControlDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeTextControlDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextControlFocusDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextControlFocusNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeTextControlHoverDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextControlHoverNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeTextControlLabelBadDay = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let amodeTextControlLabelBadNight = Color(red: 1.0, green: 0.50196, blue: 0.40000, opacity: 1)
    static let amodeTextControlLabelDefaultDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeTextControlLabelDefaultNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeTextControlLabelDisabledDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeTextControlLabelDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextControlPlaceholderDefaultDay = Color(red: 0.48627, green: 0.45882, blue: 0.43137, opacity: 1)
    static let amodeTextControlPlaceholderDefaultNight = Color(red: 0.16863, green: 0.65098, blue: 0.55294, opacity: 1)
    static let amodeTextControlPlaceholderDisabledDay = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let amodeTextControlPlaceholderDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextControlPressedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextControlPressedNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeTextControlSelectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextControlSelectedNight = Color(red: 0.89020, green: 1.0, blue: 0.95686, opacity: 1)
    static let amodeTextControlSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextControlSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextControlSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextControlSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextControlSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextControlSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextControlUnselectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextControlUnselectedNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let amodeTextNavDefaultDay = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextNavDefaultNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextNavDisabledDay = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let amodeTextNavDisabledNight = Color(red: 0.09804, green: 0.38431, blue: 0.32941, opacity: 1)
    static let amodeTextNavFocusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavFocusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavHoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavHoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavInverseDefault_inverseDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextNavInverseDefault_inverseNight = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let amodeTextNavPressedDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavPressedNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavSelectedDay = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextNavSelectedNight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let amodeTextNavSelected_disabledDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavSelected_disabledNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavSelected_focusDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavSelected_focusNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavSelected_hoverDay = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavSelected_hoverNight = Color(red: 1.0, green: 1.0, blue: 0.0, opacity: 1)
    static let amodeTextNavUnselectedDay = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let amodeTextNavUnselectedNight = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let color_styles_figma_bg_children = Color(red: 0.91765, green: 0.85490, blue: 1.0, opacity: 1)
    static let eightshapes_specsAnnotationAlignment_gridDark = Color(red: 0.52941, green: 0.56078, blue: 0.56863, opacity: 1)
    static let eightshapes_specsAnnotationAlignment_gridLight = Color(red: 0.41961, green: 0.41961, blue: 0.41961, opacity: 1)
    static let eightshapes_specsAnnotationDirection_arrowDark = Color(red: 0.52941, green: 0.56078, blue: 0.56863, opacity: 1)
    static let eightshapes_specsAnnotationDirection_arrowLight = Color(red: 0.41961, green: 0.41961, blue: 0.41961, opacity: 1)
    static let eightshapes_specsAnnotationElement_outlineDark = Color(red: 0.32157, green: 0.54118, blue: 0.96078, opacity: 1)
    static let eightshapes_specsAnnotationElement_outlineLight = Color(red: 0.05098, green: 0.41176, blue: 0.83137, opacity: 1)
    static let eightshapes_specsAnnotationElement_overlayDark = Color(red: 0.32157, green: 0.54118, blue: 0.96078, opacity: 1)
    static let eightshapes_specsAnnotationElement_overlayLight = Color(red: 0.05098, green: 0.41176, blue: 0.83137, opacity: 1)
    static let eightshapes_specsAnnotationItem_sizeDark = Color(red: 0.94118, green: 0.36078, blue: 0.16078, opacity: 1)
    static let eightshapes_specsAnnotationItem_sizeLight = Color(red: 0.77255, green: 0.27451, blue: 0.0, opacity: 1)
    static let eightshapes_specsAnnotationItem_spacing_lineDark = Color(red: 0.94118, green: 0.36078, blue: 0.16078, opacity: 1)
    static let eightshapes_specsAnnotationItem_spacing_lineLight = Color(red: 0.77255, green: 0.27451, blue: 0.0, opacity: 1)
    static let eightshapes_specsAnnotationItem_spacing_overlayDark = Color(red: 0.94118, green: 0.36078, blue: 0.16078, opacity: 1)
    static let eightshapes_specsAnnotationItem_spacing_overlayLight = Color(red: 0.77255, green: 0.27451, blue: 0.0, opacity: 1)
    static let eightshapes_specsAnnotationMarker_fillDark = Color(red: 0.94118, green: 0.36078, blue: 0.16078, opacity: 1)
    static let eightshapes_specsAnnotationMarker_fillLight = Color(red: 0.77255, green: 0.27451, blue: 0.0, opacity: 1)
    static let eightshapes_specsAnnotationMarker_textDark = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let eightshapes_specsAnnotationMarker_textLight = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let eightshapes_specsAnnotationPadding_lineDark = Color(red: 0.16078, green: 0.63922, blue: 0.29020, opacity: 1)
    static let eightshapes_specsAnnotationPadding_lineLight = Color(red: 0.0, green: 0.49020, blue: 0.0, opacity: 1)
    static let eightshapes_specsAnnotationPadding_overlayDark = Color(red: 0.16078, green: 0.63922, blue: 0.29020, opacity: 1)
    static let eightshapes_specsAnnotationPadding_overlayLight = Color(red: 0.0, green: 0.49020, blue: 0.0, opacity: 1)
    static let eightshapes_specsAnnotationPadding_sizeDark = Color(red: 0.16078, green: 0.63922, blue: 0.29020, opacity: 1)
    static let eightshapes_specsAnnotationPadding_sizeLight = Color(red: 0.0, green: 0.49020, blue: 0.0, opacity: 1)
    static let eightshapes_specsArtwork_backgroundDark = Color(red: 0.0, green: 0.10196, blue: 0.08235, opacity: 1)
    static let eightshapes_specsArtwork_backgroundLight = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let eightshapes_specsArtwork_strokeDark = Color(red: 0.05098, green: 0.07059, blue: 0.07843, opacity: 1)
    static let eightshapes_specsArtwork_strokeLight = Color(red: 0.94902, green: 0.94902, blue: 0.94902, opacity: 1)
    static let eightshapes_specsAttributesDependency_fillDark = Color(red: 0.05098, green: 0.07059, blue: 0.07843, opacity: 1)
    static let eightshapes_specsAttributesDependency_fillLight = Color(red: 0.94902, green: 0.94902, blue: 0.94902, opacity: 1)
    static let eightshapes_specsAttributesDependency_strokeDark = Color(red: 0.18039, green: 0.21176, blue: 0.23137, opacity: 1)
    static let eightshapes_specsAttributesDependency_strokeLight = Color(red: 0.89020, green: 0.89020, blue: 0.89020, opacity: 1)
    static let eightshapes_specsAttributesDependency_textDark = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let eightshapes_specsAttributesDependency_textLight = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 1)
    static let eightshapes_specsAttributesIcon_strokeDark = Color(red: 0.52941, green: 0.56078, blue: 0.56863, opacity: 1)
    static let eightshapes_specsAttributesIcon_strokeLight = Color(red: 0.41961, green: 0.41961, blue: 0.41961, opacity: 1)
    static let eightshapes_specsAttributesRaw_value_textDark = Color(red: 0.52941, green: 0.56078, blue: 0.56863, opacity: 1)
    static let eightshapes_specsAttributesRaw_value_textLight = Color(red: 0.41961, green: 0.41961, blue: 0.41961, opacity: 1)
    static let eightshapes_specsAttributesStyle_fillDark = Color(red: 0.05098, green: 0.07059, blue: 0.07843, opacity: 1)
    static let eightshapes_specsAttributesStyle_fillLight = Color(red: 0.94902, green: 0.94902, blue: 0.94902, opacity: 1)
    static let eightshapes_specsAttributesStyle_strokeDark = Color(red: 0.18039, green: 0.21176, blue: 0.23137, opacity: 1)
    static let eightshapes_specsAttributesStyle_strokeLight = Color(red: 0.89020, green: 0.89020, blue: 0.89020, opacity: 1)
    static let eightshapes_specsAttributesStyle_textDark = Color(red: 0.96078, green: 0.58824, blue: 0.58039, opacity: 1)
    static let eightshapes_specsAttributesStyle_textLight = Color(red: 0.52157, green: 0.12157, blue: 0.25490, opacity: 1)
    static let eightshapes_specsAttributesToken_fillDark = Color(red: 0.05098, green: 0.07059, blue: 0.07843, opacity: 1)
    static let eightshapes_specsAttributesToken_fillLight = Color(red: 0.94118, green: 0.94118, blue: 0.94118, opacity: 1)
    static let eightshapes_specsAttributesToken_textDark = Color(red: 0.96078, green: 0.58824, blue: 0.58039, opacity: 1)
    static let eightshapes_specsAttributesToken_textLight = Color(red: 0.52157, green: 0.12157, blue: 0.25490, opacity: 1)
    static let eightshapes_specsAttributesVariable_fillDark = Color(red: 0.05098, green: 0.07059, blue: 0.07843, opacity: 1)
    static let eightshapes_specsAttributesVariable_fillLight = Color(red: 0.94902, green: 0.94902, blue: 0.94902, opacity: 1)
    static let eightshapes_specsAttributesVariable_strokeDark = Color(red: 0.18039, green: 0.21176, blue: 0.23137, opacity: 1)
    static let eightshapes_specsAttributesVariable_strokeLight = Color(red: 0.89020, green: 0.89020, blue: 0.89020, opacity: 1)
    static let eightshapes_specsAttributesVariable_textDark = Color(red: 0.96078, green: 0.58824, blue: 0.58039, opacity: 1)
    static let eightshapes_specsAttributesVariable_textLight = Color(red: 0.52157, green: 0.12157, blue: 0.25490, opacity: 1)
    static let eightshapes_specsBackgroundDark = Color(red: 0.12941, green: 0.14902, blue: 0.16078, opacity: 1)
    static let eightshapes_specsBackgroundLight = Color(red: 0.99608, green: 0.99608, blue: 0.99608, opacity: 1)
    static let eightshapes_specsTextPrimaryDark = Color(red: 0.96471, green: 0.96471, blue: 0.94902, opacity: 1)
    static let eightshapes_specsTextPrimaryLight = Color(red: 0.09412, green: 0.05882, blue: 0.02353, opacity: 1)
    static let eightshapes_specsTextSecondaryDark = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let eightshapes_specsTextSecondaryLight = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let sys_rampsSecondary_colorRamp_teal02 = Color(red: 0.76471, green: 0.97647, blue: 0.93333, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal02 = Color(red: 0.76471, green: 0.97647, blue: 0.93333, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal04 = Color(red: 0.71765, green: 0.87843, blue: 0.85098, opacity: 1)
    static let sys_brand_aliasDaySecondary_colorTealTeal05 = Color(red: 0.44314, green: 0.76471, blue: 0.70196, opacity: 1)
    static let sys_brand_aliasDaySystemBlack = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 1)
    static let sys_brand_aliasDaySystemWhite = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorYellowLemon = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let sys_brand_aliasDayTertiary_colorYellowMango = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey02 = Color(red: 0.94510, green: 0.94510, blue: 0.92549, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey03 = Color(red: 0.87843, green: 0.87843, blue: 0.86275, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey04 = Color(red: 0.76078, green: 0.75294, blue: 0.73725, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey05 = Color(red: 0.55686, green: 0.54118, blue: 0.52157, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey06 = Color(red: 0.48627, green: 0.45882, blue: 0.43137, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorGreyGrey07 = Color(red: 0.39216, green: 0.36863, blue: 0.34510, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal02 = Color(red: 0.76471, green: 0.97647, blue: 0.93333, opacity: 1)
    static let sys_brand_aliasNightSecondary_colorTealTeal05 = Color(red: 0.44314, green: 0.76471, blue: 0.70196, opacity: 1)
    static let sys_brand_aliasNightSystemBlack = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 1)
    static let sys_brand_aliasNightSystemWhite = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorYellowLemon = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let sys_brand_aliasNightTertiary_colorYellowMango = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let sys_brand_aliasUnsure__ = Color(red: 0.0, green: 1.0, blue: 1.0, opacity: 1)
    static let sys_rampsRamp_systemBlack = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 1)
    static let sys_rampsRamp_systemGreen = Color(red: 0.13333, green: 0.51765, blue: 0.44314, opacity: 1)
    static let sys_rampsRamp_systemLemon = Color(red: 1.0, green: 0.79608, blue: 0.27451, opacity: 1)
    static let sys_rampsRamp_systemMango = Color(red: 0.98039, green: 0.73725, blue: 0.23529, opacity: 1)
    static let sys_rampsRamp_systemPomegranate = Color(red: 0.65490, green: 0.22745, blue: 0.28235, opacity: 1)
    static let sys_rampsRamp_systemWhite = Color(red: 1.0, green: 1.0, blue: 1.0, opacity: 1)
  }

  class Dimension {
    static let amodeElevationBlurBlur_10Day = 10
    static let amodeElevationBlurBlur_10Night = 10
    static let amodeElevationBlurBlur_14Day = 14
    static let amodeElevationBlurBlur_14Night = 14
    static let amodeElevationBlurBlur_2Day = 2
    static let amodeElevationBlurBlur_2Night = 2
    static let amodeElevationBlurBlur_25Day = 25
    static let amodeElevationBlurBlur_25Night = 25
    static let amodeElevationBlurBlur_44Day = 44
    static let amodeElevationBlurBlur_44Night = 44
    static let amodeElevationBlurBlur_76Day = 76
    static let amodeElevationBlurBlur_76Night = 76
    static let amodeElevationSpreadS_0Day = 0
    static let amodeElevationSpreadS_0Night = 0
    static let amodeElevationSpreadS_minus_18Day = -18
    static let amodeElevationSpreadS_minus_18Night = -18
    static let amodeElevationSpreadS_minus_2Day = -2
    static let amodeElevationSpreadS_minus_2Night = -2
    static let amodeElevationSpreadS_minus_32Day = -32
    static let amodeElevationSpreadS_minus_32Night = -32
    static let amodeElevationSpreadS_minus_5Day = -5
    static let amodeElevationSpreadS_minus_5Night = -5
    static let amodeElevationXXDay = 0
    static let amodeElevationXXNight = 0
    static let amodeElevationYY_0Day = 0
    static let amodeElevationYY_0Night = 0
    static let amodeElevationYY_10Day = 10
    static let amodeElevationYY_10Night = 10
    static let amodeElevationYY_18Day = 18
    static let amodeElevationYY_18Night = 18
    static let amodeElevationYY_2Day = 2
    static let amodeElevationYY_2Night = 2
    static let amodeElevationYY_5Day = 5
    static let amodeElevationYY_5Night = 5
    static let amodeElevationYY_65Day = 65
    static let amodeElevationYY_65Night = 65
    static let com_font_size3Catchup__3_ = 9
    static let com_font_size3Ketchup__default__4__ = 12
    static let com_font_size4Catchup__3_ = 12
    static let com_font_size4Ketchup__default__4__ = 16
    static let com_font_size5Catchup__3_ = 15
    static let com_font_size5Ketchup__default__4__ = 20
    static let com_font_size6Catchup__3_ = 18
    static let com_font_size6Ketchup__default__4__ = 24
    static let com_font_size8Catchup__3_ = 24
    static let com_font_size8Ketchup__default__4__ = 32
    static let com_font_size10Catchup__3_ = 30
    static let com_font_size10Ketchup__default__4__ = 40
    static let com_font_size12Catchup__3_ = 36
    static let com_font_size12Ketchup__default__4__ = 48
    static let com_font_size14Catchup__3_ = 42
    static let com_font_size14Ketchup__default__4__ = 56
    static let com_font_size18Catchup__3_ = 54
    static let com_font_size18Ketchup__default__4__ = 72
    static let com_font_size24Catchup__3_ = 72
    static let com_font_size24Ketchup__default__4__ = 96
    static let com_font_size16_5Catchup__3_ = 49.5
    static let com_font_size16_5Ketchup__default__4__ = 66
    static let com_font_size3_5Catchup__3_ = 10.5
    static let com_font_size3_5Ketchup__default__4__ = 14
    static let com_font_weightBold = 700
    static let com_font_weightDisplay = 900
    static let com_font_weightMedium = 500
    static let com_font_weightRegular = 400
    static let densitySysSys_8pxCatchup__3_ = 8
    static let densitySysSys_8pxKetchup__default__4__ = 8
    static let densityBorder__b__B_lCatchup__3_ = 8
    static let densityBorder__b__B_lKetchup__default__4__ = 8
    static let densitySysSys_4pxCatchup__3_ = 4
    static let densitySysSys_4pxKetchup__default__4__ = 4
    static let densityBorder__b__B_mCatchup__3_ = 4
    static let densityBorder__b__B_mKetchup__default__4__ = 4
    static let densitySysSys_0pxCatchup__3_ = 0
    static let densitySysSys_0pxKetchup__default__4__ = 0
    static let densityBorder__b__B_noneCatchup__3_ = 0
    static let densityBorder__b__B_noneKetchup__default__4__ = 0
    static let densitySysSys_2•5pxCatchup__3_ = 2.5
    static let densitySysSys_2•5pxKetchup__default__4__ = 2.5
    static let densityBorder__b__B_sCatchup__3_ = 2.5
    static let densityBorder__b__B_sKetchup__default__4__ = 2.5
    static let densitySysSys_12pxCatchup__3_ = 12
    static let densitySysSys_12pxKetchup__default__4__ = 12
    static let densityBorder__b__B_xlCatchup__3_ = 12
    static let densityBorder__b__B_xlKetchup__default__4__ = 12
    static let densitySysSys_1•5pxCatchup__3_ = 1.5
    static let densitySysSys_1•5pxKetchup__default__4__ = 1.5
    static let densityBorder__b__B_xsCatchup__3_ = 1.5
    static let densityBorder__b__B_xsKetchup__default__4__ = 1.5
    static let densitySysSys_0Catchup__3_ = 0
    static let densitySysSys_0Ketchup__default__4__ = 0
    static let densityGap__g__G_0Catchup__3_ = 0
    static let densityGap__g__G_0Ketchup__default__4__ = 0
    static let densityGap__g__G_0pxCatchup__3_ = 0
    static let densityGap__g__G_0pxKetchup__default__4__ = 0
    static let densityGap__g__G_12pxCatchup__3_ = 12
    static let densityGap__g__G_12pxKetchup__default__4__ = 12
    static let densitySysSys_2pxCatchup__3_ = 2
    static let densitySysSys_2pxKetchup__default__4__ = 2
    static let densityGap__g__G_2pxCatchup__3_ = 2
    static let densityGap__g__G_2pxKetchup__default__4__ = 2
    static let densitySysSys_8Catchup__3_ = 24
    static let densitySysSys_8Ketchup__default__4__ = 32
    static let densityGap__g__G_2xlCatchup__3_ = 24
    static let densityGap__g__G_2xlKetchup__default__4__ = 32
    static let densitySysSys_1Catchup__3_ = 3
    static let densitySysSys_1Ketchup__default__4__ = 4
    static let densityGap__g__G_2xsCatchup__3_ = 3
    static let densityGap__g__G_2xsKetchup__default__4__ = 4
    static let densitySysSys_10Catchup__3_ = 30
    static let densitySysSys_10Ketchup__default__4__ = 40
    static let densityGap__g__G_3xlCatchup__3_ = 30
    static let densityGap__g__G_3xlKetchup__default__4__ = 40
    static let densitySysSys_0•5Catchup__3_ = 1.5
    static let densitySysSys_0•5Ketchup__default__4__ = 2
    static let densityGap__g__G_3xsCatchup__3_ = 1.5
    static let densityGap__g__G_3xsKetchup__default__4__ = 2
    static let densityGap__g__G_4pxCatchup__3_ = 4
    static let densityGap__g__G_4pxKetchup__default__4__ = 4
    static let densitySysSys_12Catchup__3_ = 36
    static let densitySysSys_12Ketchup__default__4__ = 48
    static let densityGap__g__G_4xlCatchup__3_ = 36
    static let densityGap__g__G_4xlKetchup__default__4__ = 48
    static let densitySysSys_18Catchup__3_ = 54
    static let densitySysSys_18Ketchup__default__4__ = 72
    static let densityGap__g__G_5xlCatchup__3_ = 54
    static let densityGap__g__G_5xlKetchup__default__4__ = 72
    static let densitySysSys_24Catchup__3_ = 72
    static let densitySysSys_24Ketchup__default__4__ = 96
    static let densityGap__g__G_6xlCatchup__3_ = 72
    static let densityGap__g__G_6xlKetchup__default__4__ = 96
    static let densityGap__g__G_8pxCatchup__3_ = 8
    static let densityGap__g__G_8pxKetchup__default__4__ = 8
    static let densitySysSys_5pxCatchup__3_ = 5
    static let densitySysSys_5pxKetchup__default__4__ = 5
    static let densityGap__g__G_focus_ringCatchup__3_ = 5
    static let densityGap__g__G_focus_ringKetchup__default__4__ = 5
    static let densitySysSys_5Catchup__3_ = 15
    static let densitySysSys_5Ketchup__default__4__ = 20
    static let densityGap__g__G_lCatchup__3_ = 15
    static let densityGap__g__G_lKetchup__default__4__ = 20
    static let densitySysSys_4Catchup__3_ = 12
    static let densitySysSys_4Ketchup__default__4__ = 16
    static let densityGap__g__G_mCatchup__3_ = 12
    static let densityGap__g__G_mKetchup__default__4__ = 16
    static let densitySysSys_3Catchup__3_ = 9
    static let densitySysSys_3Ketchup__default__4__ = 12
    static let densityGap__g__G_sCatchup__3_ = 9
    static let densityGap__g__G_sKetchup__default__4__ = 12
    static let densitySysSys_6Catchup__3_ = 18
    static let densitySysSys_6Ketchup__default__4__ = 24
    static let densityGap__g__G_xlCatchup__3_ = 18
    static let densityGap__g__G_xlKetchup__default__4__ = 24
    static let densitySysSys_2Catchup__3_ = 6
    static let densitySysSys_2Ketchup__default__4__ = 8
    static let densityGap__g__G_xsCatchup__3_ = 6
    static let densityGap__g__G_xsKetchup__default__4__ = 8
    static let densityPadding__p__P_0Catchup__3_ = 0
    static let densityPadding__p__P_0Ketchup__default__4__ = 0
    static let densityPadding__p__P_0pxCatchup__3_ = 0
    static let densityPadding__p__P_0pxKetchup__default__4__ = 0
    static let densityPadding__p__P_12pxCatchup__3_ = 12
    static let densityPadding__p__P_12pxKetchup__default__4__ = 12
    static let densityPadding__p__P_2pxCatchup__3_ = 2
    static let densityPadding__p__P_2pxKetchup__default__4__ = 2
    static let densityPadding__p__P_2xlCatchup__3_ = 24
    static let densityPadding__p__P_2xlKetchup__default__4__ = 32
    static let densityPadding__p__P_2xsCatchup__3_ = 3
    static let densityPadding__p__P_2xsKetchup__default__4__ = 4
    static let densityPadding__p__P_3xlCatchup__3_ = 30
    static let densityPadding__p__P_3xlKetchup__default__4__ = 40
    static let densityPadding__p__P_3xsCatchup__3_ = 1.5
    static let densityPadding__p__P_3xsKetchup__default__4__ = 2
    static let densityPadding__p__P_4pxCatchup__3_ = 4
    static let densityPadding__p__P_4pxKetchup__default__4__ = 4
    static let densityPadding__p__P_4xlCatchup__3_ = 36
    static let densityPadding__p__P_4xlKetchup__default__4__ = 48
    static let densityPadding__p__P_5xlCatchup__3_ = 54
    static let densityPadding__p__P_5xlKetchup__default__4__ = 72
    static let densityPadding__p__P_6xlCatchup__3_ = 72
    static let densityPadding__p__P_6xlKetchup__default__4__ = 96
    static let densityPadding__p__P_8pxCatchup__3_ = 8
    static let densityPadding__p__P_8pxKetchup__default__4__ = 8
    static let densityPadding__p__P_lCatchup__3_ = 15
    static let densityPadding__p__P_lKetchup__default__4__ = 20
    static let densityPadding__p__P_mCatchup__3_ = 12
    static let densityPadding__p__P_mKetchup__default__4__ = 16
    static let densityPadding__p__P_sCatchup__3_ = 9
    static let densityPadding__p__P_sKetchup__default__4__ = 12
    static let densityPadding__p__P_xlCatchup__3_ = 18
    static let densityPadding__p__P_xlKetchup__default__4__ = 24
    static let densityPadding__p__P_xsCatchup__3_ = 6
    static let densityPadding__p__P_xsKetchup__default__4__ = 8
    static let densityPane__v__Gutter__g__V_g_2xlCatchup__3_ = 18
    static let densityPane__v__Gutter__g__V_g_2xlKetchup__default__4__ = 24
    static let densityPane__v__Gutter__g__V_g_compactCatchup__3_ = 12
    static let densityPane__v__Gutter__g__V_g_compactKetchup__default__4__ = 16
    static let densityPane__v__Gutter__g__V_g_expandedCatchup__3_ = 12
    static let densityPane__v__Gutter__g__V_g_expandedKetchup__default__4__ = 16
    static let densityPane__v__Gutter__g__V_g_extra_largeCatchup__3_ = 18
    static let densityPane__v__Gutter__g__V_g_extra_largeKetchup__default__4__ = 24
    static let densityPane__v__Gutter__g__V_g_largeCatchup__3_ = 15
    static let densityPane__v__Gutter__g__V_g_largeKetchup__default__4__ = 20
    static let densityPane__v__Gutter__g__V_g_mediumCatchup__3_ = 12
    static let densityPane__v__Gutter__g__V_g_mediumKetchup__default__4__ = 16
    static let densityPane__v__Gutter__g__V_g_tinyCatchup__3_ = 0
    static let densityPane__v__Gutter__g__V_g_tinyKetchup__default__4__ = 0
    static let densityPane__v__Height__h__V_h_2xlCatchup__3_ = 1440
    static let densityPane__v__Height__h__V_h_2xlKetchup__default__4__ = 1440
    static let densityPane__v__Height__h__V_h_compactCatchup__3_ = 667
    static let densityPane__v__Height__h__V_h_compactKetchup__default__4__ = 667
    static let densityPane__v__Height__h__V_h_expandedCatchup__3_ = 720
    static let densityPane__v__Height__h__V_h_expandedKetchup__default__4__ = 720
    static let densityPane__v__Height__h__V_h_extra_largeCatchup__3_ = 1080
    static let densityPane__v__Height__h__V_h_extra_largeKetchup__default__4__ = 1080
    static let densityPane__v__Height__h__V_h_largeCatchup__3_ = 864
    static let densityPane__v__Height__h__V_h_largeKetchup__default__4__ = 864
    static let densityPane__v__Height__h__V_h_mediumCatchup__3_ = 896
    static let densityPane__v__Height__h__V_h_mediumKetchup__default__4__ = 896
    static let densityPane__v__Height__h__V_h_tinyCatchup__3_ = 736
    static let densityPane__v__Height__h__V_h_tinyKetchup__default__4__ = 736
    static let densityPane__v__Margin__m__V_m_2xlCatchup__3_ = 30
    static let densityPane__v__Margin__m__V_m_2xlKetchup__default__4__ = 40
    static let densityPane__v__Margin__m__V_m_compactCatchup__3_ = 12
    static let densityPane__v__Margin__m__V_m_compactKetchup__default__4__ = 16
    static let densityPane__v__Margin__m__V_m_expandedCatchup__3_ = 15
    static let densityPane__v__Margin__m__V_m_expandedKetchup__default__4__ = 20
    static let densityPane__v__Margin__m__V_m_extra_largeCatchup__3_ = 24
    static let densityPane__v__Margin__m__V_m_extra_largeKetchup__default__4__ = 32
    static let densityPane__v__Margin__m__V_m_largeCatchup__3_ = 15
    static let densityPane__v__Margin__m__V_m_largeKetchup__default__4__ = 20
    static let densityPane__v__Margin__m__V_m_mediumCatchup__3_ = 12
    static let densityPane__v__Margin__m__V_m_mediumKetchup__default__4__ = 16
    static let densityPane__v__Margin__m__V_m_tinyCatchup__3_ = 0
    static let densityPane__v__Margin__m__V_m_tinyKetchup__default__4__ = 0
    static let densityPane__v__Width__w__V_w_2xlCatchup__3_ = 3840
    static let densityPane__v__Width__w__V_w_2xlKetchup__default__4__ = 3840
    static let densityPane__v__Width__w__V_w_compactCatchup__3_ = 480
    static let densityPane__v__Width__w__V_w_compactKetchup__default__4__ = 480
    static let densityPane__v__Width__w__V_w_expandedCatchup__3_ = 1536
    static let densityPane__v__Width__w__V_w_expandedKetchup__default__4__ = 1536
    static let densityPane__v__Width__w__V_w_extra_largeCatchup__3_ = 2560
    static let densityPane__v__Width__w__V_w_extra_largeKetchup__default__4__ = 2560
    static let densityPane__v__Width__w__V_w_largeCatchup__3_ = 1920
    static let densityPane__v__Width__w__V_w_largeKetchup__default__4__ = 1920
    static let densityPane__v__Width__w__V_w_mediumCatchup__3_ = 1280
    static let densityPane__v__Width__w__V_w_mediumKetchup__default__4__ = 1280
    static let densityPane__v__Width__w__V_w_tinyCatchup__3_ = 265
    static let densityPane__v__Width__w__V_w_tinyKetchup__default__4__ = 265
    static let densitySysSys_999pxCatchup__3_ = 999
    static let densitySysSys_999pxKetchup__default__4__ = 999
    static let densityRadius__r__R_circleCatchup__3_ = 999
    static let densityRadius__r__R_circleKetchup__default__4__ = 999
    static let densitySysSys_32pxCatchup__3_ = 32
    static let densitySysSys_32pxKetchup__default__4__ = 32
    static let densityRadius__r__R_lCatchup__3_ = 32
    static let densityRadius__r__R_lKetchup__default__4__ = 32
    static let densitySysSys_24pxCatchup__3_ = 24
    static let densitySysSys_24pxKetchup__default__4__ = 24
    static let densityRadius__r__R_mCatchup__3_ = 24
    static let densityRadius__r__R_mKetchup__default__4__ = 24
    static let densityRadius__r__R_noneCatchup__3_ = 0
    static let densityRadius__r__R_noneKetchup__default__4__ = 0
    static let densitySysSys_16pxCatchup__3_ = 16
    static let densitySysSys_16pxKetchup__default__4__ = 16
    static let densityRadius__r__R_sCatchup__3_ = 16
    static let densityRadius__r__R_sKetchup__default__4__ = 16
    static let densitySysSys_48pxCatchup__3_ = 48
    static let densitySysSys_48pxKetchup__default__4__ = 48
    static let densityRadius__r__R_xlCatchup__3_ = 48
    static let densityRadius__r__R_xlKetchup__default__4__ = 48
    static let densityRadius__r__R_xsCatchup__3_ = 8
    static let densityRadius__r__R_xsKetchup__default__4__ = 8
    static let densitySysSys_1pxCatchup__3_ = 1
    static let densitySysSys_1pxKetchup__default__4__ = 1
    static let text_styles_eightshapes_spec_annotations_markerLetterSpacing = 0
    static let text_styles_eightshapes_spec_annotations_marker_smallLetterSpacing = 0
    static let text_styles_eightshapes_spec_annotations_space_sizeLetterSpacing = 0
    static let text_styles_eightshapes_spec_heading_sectionLetterSpacing = 0
    static let text_styles_eightshapes_spec_heading_subsectionLetterSpacing = 0
    static let text_styles_eightshapes_spec_heading_subsectionmetadataLetterSpacing = 0
    static let text_styles_eightshapes_spec_heading_titleLetterSpacing = 0
    static let text_styles_eightshapes_spec_table_column_headerLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_attribute_propertyLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_attribute_valueLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_dependency_valueLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_elementLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_element_typeLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_labelLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_label_metadataLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_style_valueLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_token_valueLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_variable_collection_valueLetterSpacing = 0
    static let text_styles_eightshapes_spec_text_variable_valueLetterSpacing = 0
    static let text_stylesActions_button_lLineHeight = 120.00000476837158
    static let text_stylesActions_button_lLetterSpacing = 0
    static let text_stylesActions_button_mLineHeight = 120.00000476837158
    static let text_stylesActions_button_mLetterSpacing = 0
    static let text_stylesActions_button_sLineHeight = 120.00000476837158
    static let text_stylesActions_button_sLetterSpacing = 2
    static let text_stylesControls_captionLineHeight = 150
    static let text_stylesControls_captionLetterSpacing = 0
    static let text_stylesControls_caption_strongLineHeight = 150
    static let text_stylesControls_caption_strongLetterSpacing = 0
    static let text_stylesControls_global_menuLineHeight = 120.00000476837158
    static let text_stylesControls_global_menuLetterSpacing = 0
    static let text_stylesHeadlines_heading_l_compactLineHeight = 110.00000238418579
    static let text_stylesHeadlines_heading_l_compactLetterSpacing = -0.5
    static let text_stylesHeadlines_heading_l_large_LineHeight = 100
    static let text_stylesHeadlines_heading_l_large_LetterSpacing = -0.5
    static let text_stylesHeadlines_heading_l_medium___expandedLineHeight = 48
    static let text_stylesHeadlines_heading_l_medium___expandedLetterSpacing = -0.5
    static let text_stylesHeadlines_heading_m_compactLineHeight = 110.00000238418579
    static let text_stylesHeadlines_heading_m_compactLetterSpacing = 0
    static let text_stylesHeadlines_heading_m_large_LineHeight = 100
    static let text_stylesHeadlines_heading_m_large_LetterSpacing = 0
    static let text_stylesHeadlines_heading_m_medium___expandedLineHeight = 40
    static let text_stylesHeadlines_heading_m_medium___expandedLetterSpacing = 0
    static let text_stylesHeadlines_heading_s_compactLineHeight = 110.00000238418579
    static let text_stylesHeadlines_heading_s_compactLetterSpacing = 0
    static let text_stylesHeadlines_heading_s_large_LineHeight = 28
    static let text_stylesHeadlines_heading_s_large_LetterSpacing = 0
    static let text_stylesHeadlines_heading_s_medium___expandedLineHeight = 28
    static let text_stylesHeadlines_heading_s_medium___expandedLetterSpacing = 0
    static let text_stylesHeadlines_heading_xs_heading_xsLineHeight = 110.00000238418579
    static let text_stylesHeadlines_heading_xs_heading_xsLetterSpacing = 0
    static let text_stylesStandard_text_body_lLineHeight = 150
    static let text_stylesStandard_text_body_lLetterSpacing = 0
    static let text_stylesStandard_text_body_l_leadLineHeight = 150
    static let text_stylesStandard_text_body_l_leadLetterSpacing = 0
    static let text_stylesStandard_text_body_l_underlineLineHeight = 150
    static let text_stylesStandard_text_body_l_underlineLetterSpacing = 0
    static let text_stylesStandard_text_body_mLineHeight = 150
    static let text_stylesStandard_text_body_mLetterSpacing = 0
    static let text_stylesStandard_text_body_m_leadLineHeight = 150
    static let text_stylesStandard_text_body_m_leadLetterSpacing = 0
    static let text_stylesStandard_text_body_m_underlineLineHeight = 150
    static let text_stylesStandard_text_body_m_underlineLetterSpacing = 0
    static let text_stylesStandard_text_body_sLineHeight = 150
    static let text_stylesStandard_text_body_sLetterSpacing = 0
    static let text_stylesStandard_text_body_s_leadLineHeight = 150
    static let text_stylesStandard_text_body_s_leadLetterSpacing = 0
    static let text_stylesStandard_text_body_s_underlineLineHeight = 150
    static let text_stylesStandard_text_body_s_underlineLetterSpacing = 0
  }

  class Shadow {
    static let effect_stylesElevation_elevation_01Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.03999999910593033)
    static let effect_stylesElevation_elevation_01X = 0
    static let effect_stylesElevation_elevation_01Spread = 0.0
    static let effect_stylesElevation_elevation_01Blur = 2.0
    static let effect_stylesElevation_elevation_020Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.03999999910593033)
    static let effect_stylesElevation_elevation_020X = 0
    static let effect_stylesElevation_elevation_020Spread = -5.0
    static let effect_stylesElevation_elevation_020Blur = 10.0
    static let effect_stylesElevation_elevation_021Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.10000000149011612)
    static let effect_stylesElevation_elevation_021X = 0
    static let effect_stylesElevation_elevation_021Spread = -5.0
    static let effect_stylesElevation_elevation_021Blur = 25.0
    static let effect_stylesElevation_elevation_022Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.029999999329447746)
    static let effect_stylesElevation_elevation_022X = 0
    static let effect_stylesElevation_elevation_022Spread = 0.0
    static let effect_stylesElevation_elevation_022Blur = 14.0
    static let effect_stylesElevation_elevation_030Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.10000000149011612)
    static let effect_stylesElevation_elevation_030X = 0
    static let effect_stylesElevation_elevation_030Spread = -32.0
    static let effect_stylesElevation_elevation_030Blur = 76.0
    static let effect_stylesElevation_elevation_031Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.12999999523162842)
    static let effect_stylesElevation_elevation_031X = 0
    static let effect_stylesElevation_elevation_031Spread = -18.0
    static let effect_stylesElevation_elevation_031Blur = 44.0
    static let effect_stylesLocal_design_system_only0Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.1)
    static let effect_stylesLocal_design_system_only0X = 13
    static let effect_stylesLocal_design_system_only0Spread = 0.0
    static let effect_stylesLocal_design_system_only0Blur = 31.0
    static let effect_stylesLocal_design_system_only1Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.09)
    static let effect_stylesLocal_design_system_only1X = 54
    static let effect_stylesLocal_design_system_only1Spread = 0.0
    static let effect_stylesLocal_design_system_only1Blur = 56.0
    static let effect_stylesLocal_design_system_only2Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.05)
    static let effect_stylesLocal_design_system_only2X = 121
    static let effect_stylesLocal_design_system_only2Spread = 0.0
    static let effect_stylesLocal_design_system_only2Blur = 76.0
    static let effect_stylesLocal_design_system_only3Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0.01)
    static let effect_stylesLocal_design_system_only3X = 215
    static let effect_stylesLocal_design_system_only3Spread = 0.0
    static let effect_stylesLocal_design_system_only3Blur = 90.0
    static let effect_stylesLocal_design_system_only4Color = Color(red: 0.0, green: 0.0, blue: 0.0, opacity: 0)
    static let effect_stylesLocal_design_system_only4X = 335
    static let effect_stylesLocal_design_system_only4Spread = 0.0
    static let effect_stylesLocal_design_system_only4Blur = 98.0
  }

  class Font_ {
    static let text_styles_eightshapes_spec_annotations_marker = Font.custom("Inter", size: 14)
    static let text_styles_eightshapes_spec_annotations_marker_small = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_annotations_space_size = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_heading_section = Font.custom("Inter", size: 48)
    static let text_styles_eightshapes_spec_heading_subsection = Font.custom("Inter", size: 36)
    static let text_styles_eightshapes_spec_heading_subsectionmetadata = Font.custom("Inter", size: 16)
    static let text_styles_eightshapes_spec_heading_title = Font.custom("Inter", size: 64)
    static let text_styles_eightshapes_spec_table_column_header = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_attribute_property = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_attribute_value = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_dependency_value = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_element = Font.custom("Inter", size: 16)
    static let text_styles_eightshapes_spec_text_element_type = Font.custom("Inter", size: 16)
    static let text_styles_eightshapes_spec_text_label = Font.custom("Inter", size: 24)
    static let text_styles_eightshapes_spec_text_label_metadata = Font.custom("Inter", size: 18)
    static let text_styles_eightshapes_spec_text_style_value = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_token_value = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_variable_collection_value = Font.custom("Inter", size: 12)
    static let text_styles_eightshapes_spec_text_variable_value = Font.custom("Inter", size: 12)
    static let text_stylesActions_button_l = Font.custom("DOJO Roobert", size: 20)
    static let text_stylesActions_button_m = Font.custom("DOJO Roobert", size: 16)
    static let text_stylesActions_button_s = Font.custom("DOJO Roobert", size: 14)
    static let text_stylesControls_caption = Font.custom("DOJO Roobert", size: 12)
    static let text_stylesControls_caption_strong = Font.custom("DOJO Roobert", size: 12)
    static let text_stylesControls_global_menu = Font.custom("DOJO Roobert", size: 12)
    static let text_stylesHeadlines_heading_l_compact = Font.custom("DOJO Roobert", size: 40)
    static let text_stylesHeadlines_heading_l_large_ = Font.custom("DOJO Roobert", size: 96)
    static let text_stylesHeadlines_heading_l_medium___expanded = Font.custom("DOJO Roobert", size: 72)
    static let text_stylesHeadlines_heading_m_compact = Font.custom("DOJO Roobert", size: 32)
    static let text_stylesHeadlines_heading_m_large_ = Font.custom("DOJO Roobert", size: 72)
    static let text_stylesHeadlines_heading_m_medium___expanded = Font.custom("DOJO Roobert", size: 56)
    static let text_stylesHeadlines_heading_s_compact = Font.custom("DOJO Roobert", size: 24)
    static let text_stylesHeadlines_heading_s_large_ = Font.custom("DOJO Roobert", size: 32)
    static let text_stylesHeadlines_heading_s_medium___expanded = Font.custom("DOJO Roobert", size: 32)
    static let text_stylesHeadlines_heading_xs_heading_xs = Font.custom("DOJO Roobert", size: 20)
    static let text_stylesStandard_text_body_l = Font.custom("DOJO Roobert", size: 20)
    static let text_stylesStandard_text_body_l_lead = Font.custom("DOJO Roobert", size: 20)
    static let text_stylesStandard_text_body_l_underline = Font.custom("DOJO Roobert", size: 20)
    static let text_stylesStandard_text_body_m = Font.custom("DOJO Roobert", size: 16)
    static let text_stylesStandard_text_body_m_lead = Font.custom("DOJO Roobert", size: 16)
    static let text_stylesStandard_text_body_m_underline = Font.custom("DOJO Roobert", size: 16)
    static let text_stylesStandard_text_body_s = Font.custom("DOJO Roobert", size: 14)
    static let text_stylesStandard_text_body_s_lead = Font.custom("DOJO Roobert", size: 14)
    static let text_stylesStandard_text_body_s_underline = Font.custom("DOJO Roobert", size: 14)
  }


}